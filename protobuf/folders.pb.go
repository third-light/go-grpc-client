// This is a protobuf specifications for the Folders module of the Third Light gRPC API for Chorus.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.6.1
// source: folders.proto

package protobuf

import (
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Representation of the type of a folder in Chorus.
type FolderDetails_Type int32

const (
	// This is a generic container.
	FolderDetails_Container FolderDetails_Type = 0
	// This is a normal folder.
	FolderDetails_Folder FolderDetails_Type = 1
	// This is a Smart Collection.
	FolderDetails_SmartCollection FolderDetails_Type = 2
	// This is a Collection.
	FolderDetails_Collection FolderDetails_Type = 3
	// This is a Recycle Bin.
	FolderDetails_RecycleBin FolderDetails_Type = 4
	// This is the root folder of a Context (e.g. a Space)
	FolderDetails_ContextFolder FolderDetails_Type = 5
	// This is a folder that contains the results of a search.
	FolderDetails_SearchResults FolderDetails_Type = 6
	// This is a folder that is in the recycle bin.
	FolderDetails_DeletedFolder FolderDetails_Type = 7
	// This is the parent folder of a user's search results.
	FolderDetails_SearchRoot FolderDetails_Type = 8
	// This is a collection created to share some files with other users or Spaces.
	FolderDetails_ShareCollection FolderDetails_Type = 9
	// This is a collection created to share some files or folders as a link.
	FolderDetails_SharedLinkCollection FolderDetails_Type = 10
	// This is the root folder where a user or Space's Share Collections are created.
	FolderDetails_SharesRoot FolderDetails_Type = 11
	// This is the root where a user or Space's Shared Link Collections are created.
	FolderDetails_SharedLinksRoot FolderDetails_Type = 12
	// This is a collection that contains a file's incoming attachments.
	FolderDetails_IncomingAttachments FolderDetails_Type = 13
	// This is a collection that contains a file's outgoing attachments.
	FolderDetails_OutgoingAttachments FolderDetails_Type = 14
	// This is a folder associated with a workflow. Unlike a `WorkflowCollection`, it can contain original
	// files and folders.
	FolderDetails_WorkflowFolder FolderDetails_Type = 15
	// This is a collection associated with a workflow. It can contain links to files elsewhere in Chorus.
	FolderDetails_WorkflowCollection FolderDetails_Type = 16
	// This is the root where a Space's WorkflowFolders and WorkflowCollections are created.
	FolderDetails_WorkflowPrivateRoot FolderDetails_Type = 17
	// This is a collection associated with a derivative. It can contain links to derivatives elsewhere in Chorus.
	FolderDetails_DerivativeCollection FolderDetails_Type = 18
	// This is a folder used by the Chorus Sync application.
	FolderDetails_SyncFolder FolderDetails_Type = 19
	// This is a private collection (restricted to private space, confers no access rights)
	FolderDetails_PrivateCollection FolderDetails_Type = 20
	// This is a collection of accepted workflow collections from one workflow request to multiple workflows.
	FolderDetails_WorkflowBatchCollection FolderDetails_Type = 21
)

// Enum value maps for FolderDetails_Type.
var (
	FolderDetails_Type_name = map[int32]string{
		0:  "Container",
		1:  "Folder",
		2:  "SmartCollection",
		3:  "Collection",
		4:  "RecycleBin",
		5:  "ContextFolder",
		6:  "SearchResults",
		7:  "DeletedFolder",
		8:  "SearchRoot",
		9:  "ShareCollection",
		10: "SharedLinkCollection",
		11: "SharesRoot",
		12: "SharedLinksRoot",
		13: "IncomingAttachments",
		14: "OutgoingAttachments",
		15: "WorkflowFolder",
		16: "WorkflowCollection",
		17: "WorkflowPrivateRoot",
		18: "DerivativeCollection",
		19: "SyncFolder",
		20: "PrivateCollection",
		21: "WorkflowBatchCollection",
	}
	FolderDetails_Type_value = map[string]int32{
		"Container":               0,
		"Folder":                  1,
		"SmartCollection":         2,
		"Collection":              3,
		"RecycleBin":              4,
		"ContextFolder":           5,
		"SearchResults":           6,
		"DeletedFolder":           7,
		"SearchRoot":              8,
		"ShareCollection":         9,
		"SharedLinkCollection":    10,
		"SharesRoot":              11,
		"SharedLinksRoot":         12,
		"IncomingAttachments":     13,
		"OutgoingAttachments":     14,
		"WorkflowFolder":          15,
		"WorkflowCollection":      16,
		"WorkflowPrivateRoot":     17,
		"DerivativeCollection":    18,
		"SyncFolder":              19,
		"PrivateCollection":       20,
		"WorkflowBatchCollection": 21,
	}
)

func (x FolderDetails_Type) Enum() *FolderDetails_Type {
	p := new(FolderDetails_Type)
	*p = x
	return p
}

func (x FolderDetails_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FolderDetails_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_folders_proto_enumTypes[0].Descriptor()
}

func (FolderDetails_Type) Type() protoreflect.EnumType {
	return &file_folders_proto_enumTypes[0]
}

func (x FolderDetails_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FolderDetails_Type.Descriptor instead.
func (FolderDetails_Type) EnumDescriptor() ([]byte, []int) {
	return file_folders_proto_rawDescGZIP(), []int{0, 0}
}

// Details about a Chorus folder.
type FolderDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The identifier for the containing context
	Context string `protobuf:"bytes,3,opt,name=context,proto3" json:"context,omitempty"`
	// The date/time that this object was created
	CreatedDate *DateTime `protobuf:"bytes,102,opt,name=createdDate,proto3" json:"createdDate,omitempty"`
	// The description of the folder.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Unique ID of this object.
	Id string `protobuf:"bytes,101,opt,name=id,proto3" json:"id,omitempty"`
	// The date/time that this object was last changed
	ModifiedDate *DateTime `protobuf:"bytes,103,opt,name=modifiedDate,proto3" json:"modifiedDate,omitempty"`
	Name         string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The ID of the parent of the folder, or null if there is no parent
	ParentId *wrappers.StringValue `protobuf:"bytes,2,opt,name=parentId,proto3" json:"parentId,omitempty"`
	// The type of the folder.
	Type FolderDetails_Type `protobuf:"varint,5,opt,name=type,proto3,enum=chorus.FolderDetails_Type" json:"type,omitempty"`
}

func (x *FolderDetails) Reset() {
	*x = FolderDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_folders_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FolderDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FolderDetails) ProtoMessage() {}

func (x *FolderDetails) ProtoReflect() protoreflect.Message {
	mi := &file_folders_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FolderDetails.ProtoReflect.Descriptor instead.
func (*FolderDetails) Descriptor() ([]byte, []int) {
	return file_folders_proto_rawDescGZIP(), []int{0}
}

func (x *FolderDetails) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

func (x *FolderDetails) GetCreatedDate() *DateTime {
	if x != nil {
		return x.CreatedDate
	}
	return nil
}

func (x *FolderDetails) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FolderDetails) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FolderDetails) GetModifiedDate() *DateTime {
	if x != nil {
		return x.ModifiedDate
	}
	return nil
}

func (x *FolderDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FolderDetails) GetParentId() *wrappers.StringValue {
	if x != nil {
		return x.ParentId
	}
	return nil
}

func (x *FolderDetails) GetType() FolderDetails_Type {
	if x != nil {
		return x.Type
	}
	return FolderDetails_Container
}

// Details about a folder link in Chorus.
type FolderLinkDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The date/time that this object was created
	CreatedDate *DateTime `protobuf:"bytes,102,opt,name=createdDate,proto3" json:"createdDate,omitempty"`
	// Unique ID of this object.
	Id string `protobuf:"bytes,101,opt,name=id,proto3" json:"id,omitempty"`
	// The name of the linked folder.
	LinkName string `protobuf:"bytes,1,opt,name=linkName,proto3" json:"linkName,omitempty"`
	// The date/time that this object was last changed
	ModifiedDate *DateTime `protobuf:"bytes,103,opt,name=modifiedDate,proto3" json:"modifiedDate,omitempty"`
	// The ID of the linked folder.
	OriginalFolderId string `protobuf:"bytes,2,opt,name=originalFolderId,proto3" json:"originalFolderId,omitempty"`
}

func (x *FolderLinkDetails) Reset() {
	*x = FolderLinkDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_folders_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FolderLinkDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FolderLinkDetails) ProtoMessage() {}

func (x *FolderLinkDetails) ProtoReflect() protoreflect.Message {
	mi := &file_folders_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FolderLinkDetails.ProtoReflect.Descriptor instead.
func (*FolderLinkDetails) Descriptor() ([]byte, []int) {
	return file_folders_proto_rawDescGZIP(), []int{1}
}

func (x *FolderLinkDetails) GetCreatedDate() *DateTime {
	if x != nil {
		return x.CreatedDate
	}
	return nil
}

func (x *FolderLinkDetails) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FolderLinkDetails) GetLinkName() string {
	if x != nil {
		return x.LinkName
	}
	return ""
}

func (x *FolderLinkDetails) GetModifiedDate() *DateTime {
	if x != nil {
		return x.ModifiedDate
	}
	return nil
}

func (x *FolderLinkDetails) GetOriginalFolderId() string {
	if x != nil {
		return x.OriginalFolderId
	}
	return ""
}

type FoldersRequests struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FoldersRequests) Reset() {
	*x = FoldersRequests{}
	if protoimpl.UnsafeEnabled {
		mi := &file_folders_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FoldersRequests) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FoldersRequests) ProtoMessage() {}

func (x *FoldersRequests) ProtoReflect() protoreflect.Message {
	mi := &file_folders_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FoldersRequests.ProtoReflect.Descriptor instead.
func (*FoldersRequests) Descriptor() ([]byte, []int) {
	return file_folders_proto_rawDescGZIP(), []int{2}
}

type FoldersResponses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FoldersResponses) Reset() {
	*x = FoldersResponses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_folders_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FoldersResponses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FoldersResponses) ProtoMessage() {}

func (x *FoldersResponses) ProtoReflect() protoreflect.Message {
	mi := &file_folders_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FoldersResponses.ProtoReflect.Descriptor instead.
func (*FoldersResponses) Descriptor() ([]byte, []int) {
	return file_folders_proto_rawDescGZIP(), []int{3}
}

// Settings to use for updating a folder's details.
type SettableFolderDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The description of the folder.
	Description *wrappers.StringValue `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// The name of the folder.
	Name *wrappers.StringValue `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *SettableFolderDetails) Reset() {
	*x = SettableFolderDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_folders_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettableFolderDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettableFolderDetails) ProtoMessage() {}

func (x *SettableFolderDetails) ProtoReflect() protoreflect.Message {
	mi := &file_folders_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettableFolderDetails.ProtoReflect.Descriptor instead.
func (*SettableFolderDetails) Descriptor() ([]byte, []int) {
	return file_folders_proto_rawDescGZIP(), []int{4}
}

func (x *SettableFolderDetails) GetDescription() *wrappers.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *SettableFolderDetails) GetName() *wrappers.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

type FoldersRequests_Get struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The of the folder
	FolderId string `protobuf:"bytes,1,opt,name=folderId,proto3" json:"folderId,omitempty"`
}

func (x *FoldersRequests_Get) Reset() {
	*x = FoldersRequests_Get{}
	if protoimpl.UnsafeEnabled {
		mi := &file_folders_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FoldersRequests_Get) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FoldersRequests_Get) ProtoMessage() {}

func (x *FoldersRequests_Get) ProtoReflect() protoreflect.Message {
	mi := &file_folders_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FoldersRequests_Get.ProtoReflect.Descriptor instead.
func (*FoldersRequests_Get) Descriptor() ([]byte, []int) {
	return file_folders_proto_rawDescGZIP(), []int{2, 0}
}

func (x *FoldersRequests_Get) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

type FoldersRequests_GetChildFiles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the folder to list
	FolderId string `protobuf:"bytes,1,opt,name=folderId,proto3" json:"folderId,omitempty"`
}

func (x *FoldersRequests_GetChildFiles) Reset() {
	*x = FoldersRequests_GetChildFiles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_folders_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FoldersRequests_GetChildFiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FoldersRequests_GetChildFiles) ProtoMessage() {}

func (x *FoldersRequests_GetChildFiles) ProtoReflect() protoreflect.Message {
	mi := &file_folders_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FoldersRequests_GetChildFiles.ProtoReflect.Descriptor instead.
func (*FoldersRequests_GetChildFiles) Descriptor() ([]byte, []int) {
	return file_folders_proto_rawDescGZIP(), []int{2, 1}
}

func (x *FoldersRequests_GetChildFiles) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

type FoldersRequests_GetChildFolders struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the folder to list
	FolderId string `protobuf:"bytes,1,opt,name=folderId,proto3" json:"folderId,omitempty"`
}

func (x *FoldersRequests_GetChildFolders) Reset() {
	*x = FoldersRequests_GetChildFolders{}
	if protoimpl.UnsafeEnabled {
		mi := &file_folders_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FoldersRequests_GetChildFolders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FoldersRequests_GetChildFolders) ProtoMessage() {}

func (x *FoldersRequests_GetChildFolders) ProtoReflect() protoreflect.Message {
	mi := &file_folders_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FoldersRequests_GetChildFolders.ProtoReflect.Descriptor instead.
func (*FoldersRequests_GetChildFolders) Descriptor() ([]byte, []int) {
	return file_folders_proto_rawDescGZIP(), []int{2, 2}
}

func (x *FoldersRequests_GetChildFolders) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

type FoldersRequests_GetLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the folder link
	LinkId string `protobuf:"bytes,1,opt,name=linkId,proto3" json:"linkId,omitempty"`
}

func (x *FoldersRequests_GetLink) Reset() {
	*x = FoldersRequests_GetLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_folders_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FoldersRequests_GetLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FoldersRequests_GetLink) ProtoMessage() {}

func (x *FoldersRequests_GetLink) ProtoReflect() protoreflect.Message {
	mi := &file_folders_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FoldersRequests_GetLink.ProtoReflect.Descriptor instead.
func (*FoldersRequests_GetLink) Descriptor() ([]byte, []int) {
	return file_folders_proto_rawDescGZIP(), []int{2, 3}
}

func (x *FoldersRequests_GetLink) GetLinkId() string {
	if x != nil {
		return x.LinkId
	}
	return ""
}

type FoldersRequests_GetLinkMulti struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The IDs of the folder links
	LinkIds []string `protobuf:"bytes,1,rep,name=linkIds,proto3" json:"linkIds,omitempty"`
}

func (x *FoldersRequests_GetLinkMulti) Reset() {
	*x = FoldersRequests_GetLinkMulti{}
	if protoimpl.UnsafeEnabled {
		mi := &file_folders_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FoldersRequests_GetLinkMulti) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FoldersRequests_GetLinkMulti) ProtoMessage() {}

func (x *FoldersRequests_GetLinkMulti) ProtoReflect() protoreflect.Message {
	mi := &file_folders_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FoldersRequests_GetLinkMulti.ProtoReflect.Descriptor instead.
func (*FoldersRequests_GetLinkMulti) Descriptor() ([]byte, []int) {
	return file_folders_proto_rawDescGZIP(), []int{2, 4}
}

func (x *FoldersRequests_GetLinkMulti) GetLinkIds() []string {
	if x != nil {
		return x.LinkIds
	}
	return nil
}

type FoldersRequests_GetMulti struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The IDs of the folder
	FolderIds []string `protobuf:"bytes,1,rep,name=folderIds,proto3" json:"folderIds,omitempty"`
}

func (x *FoldersRequests_GetMulti) Reset() {
	*x = FoldersRequests_GetMulti{}
	if protoimpl.UnsafeEnabled {
		mi := &file_folders_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FoldersRequests_GetMulti) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FoldersRequests_GetMulti) ProtoMessage() {}

func (x *FoldersRequests_GetMulti) ProtoReflect() protoreflect.Message {
	mi := &file_folders_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FoldersRequests_GetMulti.ProtoReflect.Descriptor instead.
func (*FoldersRequests_GetMulti) Descriptor() ([]byte, []int) {
	return file_folders_proto_rawDescGZIP(), []int{2, 5}
}

func (x *FoldersRequests_GetMulti) GetFolderIds() []string {
	if x != nil {
		return x.FolderIds
	}
	return nil
}

type FoldersRequests_Set struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The folder details to set.
	Details *SettableFolderDetails `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
	// A folder ID for the folder of interest.
	FolderId   string                `protobuf:"bytes,1,opt,name=folderId,proto3" json:"folderId,omitempty"`
	UpdateMask *field_mask.FieldMask `protobuf:"bytes,3,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *FoldersRequests_Set) Reset() {
	*x = FoldersRequests_Set{}
	if protoimpl.UnsafeEnabled {
		mi := &file_folders_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FoldersRequests_Set) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FoldersRequests_Set) ProtoMessage() {}

func (x *FoldersRequests_Set) ProtoReflect() protoreflect.Message {
	mi := &file_folders_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FoldersRequests_Set.ProtoReflect.Descriptor instead.
func (*FoldersRequests_Set) Descriptor() ([]byte, []int) {
	return file_folders_proto_rawDescGZIP(), []int{2, 6}
}

func (x *FoldersRequests_Set) GetDetails() *SettableFolderDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *FoldersRequests_Set) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *FoldersRequests_Set) GetUpdateMask() *field_mask.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type FoldersResponses_GetChildFiles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []*FileDetails `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *FoldersResponses_GetChildFiles) Reset() {
	*x = FoldersResponses_GetChildFiles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_folders_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FoldersResponses_GetChildFiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FoldersResponses_GetChildFiles) ProtoMessage() {}

func (x *FoldersResponses_GetChildFiles) ProtoReflect() protoreflect.Message {
	mi := &file_folders_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FoldersResponses_GetChildFiles.ProtoReflect.Descriptor instead.
func (*FoldersResponses_GetChildFiles) Descriptor() ([]byte, []int) {
	return file_folders_proto_rawDescGZIP(), []int{3, 0}
}

func (x *FoldersResponses_GetChildFiles) GetResponse() []*FileDetails {
	if x != nil {
		return x.Response
	}
	return nil
}

type FoldersResponses_GetChildFolders struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []*FolderDetails `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *FoldersResponses_GetChildFolders) Reset() {
	*x = FoldersResponses_GetChildFolders{}
	if protoimpl.UnsafeEnabled {
		mi := &file_folders_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FoldersResponses_GetChildFolders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FoldersResponses_GetChildFolders) ProtoMessage() {}

func (x *FoldersResponses_GetChildFolders) ProtoReflect() protoreflect.Message {
	mi := &file_folders_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FoldersResponses_GetChildFolders.ProtoReflect.Descriptor instead.
func (*FoldersResponses_GetChildFolders) Descriptor() ([]byte, []int) {
	return file_folders_proto_rawDescGZIP(), []int{3, 1}
}

func (x *FoldersResponses_GetChildFolders) GetResponse() []*FolderDetails {
	if x != nil {
		return x.Response
	}
	return nil
}

type FoldersResponses_GetLinkMulti struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []*FolderLinkDetails `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *FoldersResponses_GetLinkMulti) Reset() {
	*x = FoldersResponses_GetLinkMulti{}
	if protoimpl.UnsafeEnabled {
		mi := &file_folders_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FoldersResponses_GetLinkMulti) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FoldersResponses_GetLinkMulti) ProtoMessage() {}

func (x *FoldersResponses_GetLinkMulti) ProtoReflect() protoreflect.Message {
	mi := &file_folders_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FoldersResponses_GetLinkMulti.ProtoReflect.Descriptor instead.
func (*FoldersResponses_GetLinkMulti) Descriptor() ([]byte, []int) {
	return file_folders_proto_rawDescGZIP(), []int{3, 2}
}

func (x *FoldersResponses_GetLinkMulti) GetResponse() []*FolderLinkDetails {
	if x != nil {
		return x.Response
	}
	return nil
}

type FoldersResponses_GetMulti struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []*FolderDetails `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *FoldersResponses_GetMulti) Reset() {
	*x = FoldersResponses_GetMulti{}
	if protoimpl.UnsafeEnabled {
		mi := &file_folders_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FoldersResponses_GetMulti) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FoldersResponses_GetMulti) ProtoMessage() {}

func (x *FoldersResponses_GetMulti) ProtoReflect() protoreflect.Message {
	mi := &file_folders_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FoldersResponses_GetMulti.ProtoReflect.Descriptor instead.
func (*FoldersResponses_GetMulti) Descriptor() ([]byte, []int) {
	return file_folders_proto_rawDescGZIP(), []int{3, 3}
}

func (x *FoldersResponses_GetMulti) GetResponse() []*FolderDetails {
	if x != nil {
		return x.Response
	}
	return nil
}

var File_folders_proto protoreflect.FileDescriptor

var file_folders_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x06, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x1a, 0x0a, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x8e, 0x06, 0x0a, 0x0d, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x32,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x66, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x44, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x68, 0x6f,
	0x72, 0x75, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0c, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x38,
	0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e,
	0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xc8, 0x03, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f,
	0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x10,
	0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x10,
	0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x10,
	0x04, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x46, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x10, 0x06, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x10, 0x07, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x6f, 0x6f, 0x74, 0x10, 0x08, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x09, 0x12,
	0x18, 0x0a, 0x14, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x0a, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x73, 0x52, 0x6f, 0x6f, 0x74, 0x10, 0x0b, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x6f, 0x6f, 0x74, 0x10, 0x0c, 0x12, 0x17,
	0x0a, 0x13, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x10, 0x0d, 0x12, 0x17, 0x0a, 0x13, 0x4f, 0x75, 0x74, 0x67, 0x6f,
	0x69, 0x6e, 0x67, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x10, 0x0e,
	0x12, 0x12, 0x0a, 0x0e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x46, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x10, 0x0f, 0x12, 0x16, 0x0a, 0x12, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x10, 0x12, 0x17, 0x0a, 0x13,
	0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52,
	0x6f, 0x6f, 0x74, 0x10, 0x11, 0x12, 0x18, 0x0a, 0x14, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x12, 0x12,
	0x0e, 0x0a, 0x0a, 0x53, 0x79, 0x6e, 0x63, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x10, 0x13, 0x12,
	0x15, 0x0a, 0x11, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x10, 0x14, 0x12, 0x1b, 0x0a, 0x17, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x10, 0x15, 0x22, 0xd5, 0x01, 0x0a, 0x11, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4c, 0x69,
	0x6e, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x32, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x0c, 0x6d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x2a, 0x0a, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x46, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0xa1, 0x03, 0x0a, 0x0f,
	0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x1a,
	0x21, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x1a, 0x2b, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x1a,
	0x2d, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x21,
	0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x69, 0x6e,
	0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x69, 0x6e, 0x6b, 0x49,
	0x64, 0x1a, 0x28, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x49, 0x64, 0x73, 0x1a, 0x28, 0x0a, 0x08, 0x47,
	0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x66, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x73, 0x1a, 0x97, 0x01, 0x0a, 0x03, 0x53, 0x65, 0x74, 0x12, 0x37, 0x0a,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73,
	0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d,
	0x61, 0x73, 0x6b, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22,
	0xa0, 0x02, 0x0a, 0x10, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x73, 0x1a, 0x40, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x68, 0x69, 0x6c, 0x64,
	0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x44, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x68, 0x69,
	0x6c, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x12, 0x31, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x68,
	0x6f, 0x72, 0x75, 0x73, 0x2e, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x45, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x12, 0x35, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4c, 0x69,
	0x6e, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x1a, 0x3d, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x12,
	0x31, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x46, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x3e, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x32, 0xc8,
	0x04, 0x0a, 0x07, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x12, 0x3b, 0x0a, 0x03, 0x47, 0x65,
	0x74, 0x12, 0x1b, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x46, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x1a, 0x15,
	0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x69, 0x6c, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x25, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75,
	0x73, 0x2e, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x1a,
	0x26, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x69,
	0x6c, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x43, 0x68, 0x69, 0x6c, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x12, 0x27, 0x2e, 0x63,
	0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x46, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x73, 0x1a, 0x28, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x22,
	0x00, 0x12, 0x47, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x1f, 0x2e, 0x63,
	0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x1a, 0x19, 0x2e,
	0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x6e,
	0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x12, 0x24, 0x2e, 0x63, 0x68, 0x6f,
	0x72, 0x75, 0x73, 0x2e, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x1a, 0x25, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69,
	0x6e, 0x6b, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x08, 0x47, 0x65, 0x74,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x12, 0x20, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x1a, 0x21, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73,
	0x2e, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x03,
	0x53, 0x65, 0x74, 0x12, 0x1b, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x46, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x74,
	0x1a, 0x15, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x3b, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_folders_proto_rawDescOnce sync.Once
	file_folders_proto_rawDescData = file_folders_proto_rawDesc
)

func file_folders_proto_rawDescGZIP() []byte {
	file_folders_proto_rawDescOnce.Do(func() {
		file_folders_proto_rawDescData = protoimpl.X.CompressGZIP(file_folders_proto_rawDescData)
	})
	return file_folders_proto_rawDescData
}

var file_folders_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_folders_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_folders_proto_goTypes = []interface{}{
	(FolderDetails_Type)(0),                  // 0: chorus.FolderDetails.Type
	(*FolderDetails)(nil),                    // 1: chorus.FolderDetails
	(*FolderLinkDetails)(nil),                // 2: chorus.FolderLinkDetails
	(*FoldersRequests)(nil),                  // 3: chorus.FoldersRequests
	(*FoldersResponses)(nil),                 // 4: chorus.FoldersResponses
	(*SettableFolderDetails)(nil),            // 5: chorus.SettableFolderDetails
	(*FoldersRequests_Get)(nil),              // 6: chorus.FoldersRequests.Get
	(*FoldersRequests_GetChildFiles)(nil),    // 7: chorus.FoldersRequests.GetChildFiles
	(*FoldersRequests_GetChildFolders)(nil),  // 8: chorus.FoldersRequests.GetChildFolders
	(*FoldersRequests_GetLink)(nil),          // 9: chorus.FoldersRequests.GetLink
	(*FoldersRequests_GetLinkMulti)(nil),     // 10: chorus.FoldersRequests.GetLinkMulti
	(*FoldersRequests_GetMulti)(nil),         // 11: chorus.FoldersRequests.GetMulti
	(*FoldersRequests_Set)(nil),              // 12: chorus.FoldersRequests.Set
	(*FoldersResponses_GetChildFiles)(nil),   // 13: chorus.FoldersResponses.GetChildFiles
	(*FoldersResponses_GetChildFolders)(nil), // 14: chorus.FoldersResponses.GetChildFolders
	(*FoldersResponses_GetLinkMulti)(nil),    // 15: chorus.FoldersResponses.GetLinkMulti
	(*FoldersResponses_GetMulti)(nil),        // 16: chorus.FoldersResponses.GetMulti
	(*DateTime)(nil),                         // 17: chorus.DateTime
	(*wrappers.StringValue)(nil),             // 18: google.protobuf.StringValue
	(*field_mask.FieldMask)(nil),             // 19: google.protobuf.FieldMask
	(*FileDetails)(nil),                      // 20: chorus.FileDetails
}
var file_folders_proto_depIdxs = []int32{
	17, // 0: chorus.FolderDetails.createdDate:type_name -> chorus.DateTime
	17, // 1: chorus.FolderDetails.modifiedDate:type_name -> chorus.DateTime
	18, // 2: chorus.FolderDetails.parentId:type_name -> google.protobuf.StringValue
	0,  // 3: chorus.FolderDetails.type:type_name -> chorus.FolderDetails.Type
	17, // 4: chorus.FolderLinkDetails.createdDate:type_name -> chorus.DateTime
	17, // 5: chorus.FolderLinkDetails.modifiedDate:type_name -> chorus.DateTime
	18, // 6: chorus.SettableFolderDetails.description:type_name -> google.protobuf.StringValue
	18, // 7: chorus.SettableFolderDetails.name:type_name -> google.protobuf.StringValue
	5,  // 8: chorus.FoldersRequests.Set.details:type_name -> chorus.SettableFolderDetails
	19, // 9: chorus.FoldersRequests.Set.update_mask:type_name -> google.protobuf.FieldMask
	20, // 10: chorus.FoldersResponses.GetChildFiles.response:type_name -> chorus.FileDetails
	1,  // 11: chorus.FoldersResponses.GetChildFolders.response:type_name -> chorus.FolderDetails
	2,  // 12: chorus.FoldersResponses.GetLinkMulti.response:type_name -> chorus.FolderLinkDetails
	1,  // 13: chorus.FoldersResponses.GetMulti.response:type_name -> chorus.FolderDetails
	6,  // 14: chorus.Folders.Get:input_type -> chorus.FoldersRequests.Get
	7,  // 15: chorus.Folders.GetChildFiles:input_type -> chorus.FoldersRequests.GetChildFiles
	8,  // 16: chorus.Folders.GetChildFolders:input_type -> chorus.FoldersRequests.GetChildFolders
	9,  // 17: chorus.Folders.GetLink:input_type -> chorus.FoldersRequests.GetLink
	10, // 18: chorus.Folders.GetLinkMulti:input_type -> chorus.FoldersRequests.GetLinkMulti
	11, // 19: chorus.Folders.GetMulti:input_type -> chorus.FoldersRequests.GetMulti
	12, // 20: chorus.Folders.Set:input_type -> chorus.FoldersRequests.Set
	1,  // 21: chorus.Folders.Get:output_type -> chorus.FolderDetails
	13, // 22: chorus.Folders.GetChildFiles:output_type -> chorus.FoldersResponses.GetChildFiles
	14, // 23: chorus.Folders.GetChildFolders:output_type -> chorus.FoldersResponses.GetChildFolders
	2,  // 24: chorus.Folders.GetLink:output_type -> chorus.FolderLinkDetails
	15, // 25: chorus.Folders.GetLinkMulti:output_type -> chorus.FoldersResponses.GetLinkMulti
	16, // 26: chorus.Folders.GetMulti:output_type -> chorus.FoldersResponses.GetMulti
	1,  // 27: chorus.Folders.Set:output_type -> chorus.FolderDetails
	21, // [21:28] is the sub-list for method output_type
	14, // [14:21] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_folders_proto_init() }
func file_folders_proto_init() {
	if File_folders_proto != nil {
		return
	}
	file_core_proto_init()
	file_files_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_folders_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FolderDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_folders_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FolderLinkDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_folders_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FoldersRequests); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_folders_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FoldersResponses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_folders_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettableFolderDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_folders_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FoldersRequests_Get); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_folders_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FoldersRequests_GetChildFiles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_folders_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FoldersRequests_GetChildFolders); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_folders_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FoldersRequests_GetLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_folders_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FoldersRequests_GetLinkMulti); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_folders_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FoldersRequests_GetMulti); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_folders_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FoldersRequests_Set); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_folders_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FoldersResponses_GetChildFiles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_folders_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FoldersResponses_GetChildFolders); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_folders_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FoldersResponses_GetLinkMulti); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_folders_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FoldersResponses_GetMulti); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_folders_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_folders_proto_goTypes,
		DependencyIndexes: file_folders_proto_depIdxs,
		EnumInfos:         file_folders_proto_enumTypes,
		MessageInfos:      file_folders_proto_msgTypes,
	}.Build()
	File_folders_proto = out.File
	file_folders_proto_rawDesc = nil
	file_folders_proto_goTypes = nil
	file_folders_proto_depIdxs = nil
}
