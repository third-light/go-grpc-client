// This is a protobuf specifications for the Files module of the Third Light gRPC API for Chorus.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.6.1
// source: files.proto

package protobuf

import (
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents the type of a file.
type FileType int32

const (
	// Indicates that this is an image file.
	FileType_PICTURE FileType = 0
	// Indicates that this is a video file.
	FileType_MOVIE FileType = 1
	// Indicates that this is a document file.
	FileType_DOCUMENT FileType = 2
	// Indicates that this is an executable file.
	FileType_EXECUTABLE FileType = 3
	// Indicates that this is an audio file.
	FileType_MUSIC FileType = 4
	// Indicates that this is a generic file.
	FileType_GENERIC FileType = 5
)

// Enum value maps for FileType.
var (
	FileType_name = map[int32]string{
		0: "PICTURE",
		1: "MOVIE",
		2: "DOCUMENT",
		3: "EXECUTABLE",
		4: "MUSIC",
		5: "GENERIC",
	}
	FileType_value = map[string]int32{
		"PICTURE":    0,
		"MOVIE":      1,
		"DOCUMENT":   2,
		"EXECUTABLE": 3,
		"MUSIC":      4,
		"GENERIC":    5,
	}
)

func (x FileType) Enum() *FileType {
	p := new(FileType)
	*p = x
	return p
}

func (x FileType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileType) Descriptor() protoreflect.EnumDescriptor {
	return file_files_proto_enumTypes[0].Descriptor()
}

func (FileType) Type() protoreflect.EnumType {
	return &file_files_proto_enumTypes[0]
}

func (x FileType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileType.Descriptor instead.
func (FileType) EnumDescriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{0}
}

// Audio specific details about a file in Chorus.
type AudioDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Audio duration in seconds
	DurationSecs float64 `protobuf:"fixed64,1,opt,name=durationSecs,proto3" json:"durationSecs,omitempty"`
}

func (x *AudioDetails) Reset() {
	*x = AudioDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AudioDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioDetails) ProtoMessage() {}

func (x *AudioDetails) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioDetails.ProtoReflect.Descriptor instead.
func (*AudioDetails) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{0}
}

func (x *AudioDetails) GetDurationSecs() float64 {
	if x != nil {
		return x.DurationSecs
	}
	return 0
}

// Document specific details about a file in Chorus.
type DocumentDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Document height
	Height int64 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	// Document page count
	PageCount int64 `protobuf:"varint,3,opt,name=pageCount,proto3" json:"pageCount,omitempty"`
	// Document width
	Width int64 `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
}

func (x *DocumentDetails) Reset() {
	*x = DocumentDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentDetails) ProtoMessage() {}

func (x *DocumentDetails) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentDetails.ProtoReflect.Descriptor instead.
func (*DocumentDetails) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{1}
}

func (x *DocumentDetails) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *DocumentDetails) GetPageCount() int64 {
	if x != nil {
		return x.PageCount
	}
	return 0
}

func (x *DocumentDetails) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

// Details about a file in Chorus.
type FileDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If the file is a derivative, whether the current user can see the original file
	CanViewOriginal bool `protobuf:"varint,10,opt,name=canViewOriginal,proto3" json:"canViewOriginal,omitempty"`
	// The date/time that this object was created
	CreatedDate *DateTime `protobuf:"bytes,102,opt,name=createdDate,proto3" json:"createdDate,omitempty"`
	// The name of the file
	Filename      string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	FileSizeBytes int64  `protobuf:"varint,8,opt,name=fileSizeBytes,proto3" json:"fileSizeBytes,omitempty"`
	// The type of the file
	FileType FileType `protobuf:"varint,2,opt,name=fileType,proto3,enum=chorus.FileType" json:"fileType,omitempty"`
	// Unique ID of this object.
	Id string `protobuf:"bytes,101,opt,name=id,proto3" json:"id,omitempty"`
	// Whether the file is a derivative or not.
	IsDerivative bool          `protobuf:"varint,11,opt,name=isDerivative,proto3" json:"isDerivative,omitempty"`
	Media        *MediaDetails `protobuf:"bytes,4,opt,name=media,proto3" json:"media,omitempty"`
	// The date/time that this object was last changed
	ModifiedDate *DateTime `protobuf:"bytes,103,opt,name=modifiedDate,proto3" json:"modifiedDate,omitempty"`
	// If the file is a derivative, the guid for the original file
	OriginalAssetId *wrappers.StringValue `protobuf:"bytes,9,opt,name=originalAssetId,proto3" json:"originalAssetId,omitempty"`
	// Unique ID of the object's owning user or space
	OwnerId *wrappers.StringValue `protobuf:"bytes,7,opt,name=ownerId,proto3" json:"ownerId,omitempty"`
	// The GUID of the folder containing this file
	ParentId string `protobuf:"bytes,6,opt,name=parentId,proto3" json:"parentId,omitempty"`
	// the revision number of the file
	RevisionNumber int64 `protobuf:"varint,3,opt,name=revisionNumber,proto3" json:"revisionNumber,omitempty"`
	// populated keys depend on the get options (e.g. withExtraThumbs)
	Thumbnails *Thumbnails `protobuf:"bytes,5,opt,name=thumbnails,proto3" json:"thumbnails,omitempty"`
}

func (x *FileDetails) Reset() {
	*x = FileDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDetails) ProtoMessage() {}

func (x *FileDetails) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDetails.ProtoReflect.Descriptor instead.
func (*FileDetails) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{2}
}

func (x *FileDetails) GetCanViewOriginal() bool {
	if x != nil {
		return x.CanViewOriginal
	}
	return false
}

func (x *FileDetails) GetCreatedDate() *DateTime {
	if x != nil {
		return x.CreatedDate
	}
	return nil
}

func (x *FileDetails) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FileDetails) GetFileSizeBytes() int64 {
	if x != nil {
		return x.FileSizeBytes
	}
	return 0
}

func (x *FileDetails) GetFileType() FileType {
	if x != nil {
		return x.FileType
	}
	return FileType_PICTURE
}

func (x *FileDetails) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FileDetails) GetIsDerivative() bool {
	if x != nil {
		return x.IsDerivative
	}
	return false
}

func (x *FileDetails) GetMedia() *MediaDetails {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *FileDetails) GetModifiedDate() *DateTime {
	if x != nil {
		return x.ModifiedDate
	}
	return nil
}

func (x *FileDetails) GetOriginalAssetId() *wrappers.StringValue {
	if x != nil {
		return x.OriginalAssetId
	}
	return nil
}

func (x *FileDetails) GetOwnerId() *wrappers.StringValue {
	if x != nil {
		return x.OwnerId
	}
	return nil
}

func (x *FileDetails) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *FileDetails) GetRevisionNumber() int64 {
	if x != nil {
		return x.RevisionNumber
	}
	return 0
}

func (x *FileDetails) GetThumbnails() *Thumbnails {
	if x != nil {
		return x.Thumbnails
	}
	return nil
}

// Details about a file link in Chorus.
type FileLinkDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The date/time that this object was created
	CreatedDate *DateTime `protobuf:"bytes,102,opt,name=createdDate,proto3" json:"createdDate,omitempty"`
	// Unique ID of this object.
	Id string `protobuf:"bytes,101,opt,name=id,proto3" json:"id,omitempty"`
	// The name of the linked file.
	LinkName string `protobuf:"bytes,1,opt,name=linkName,proto3" json:"linkName,omitempty"`
	// The date/time that this object was last changed
	ModifiedDate *DateTime `protobuf:"bytes,103,opt,name=modifiedDate,proto3" json:"modifiedDate,omitempty"`
	// The ID of the linked file.
	OriginalFileId string `protobuf:"bytes,2,opt,name=originalFileId,proto3" json:"originalFileId,omitempty"`
	// The type of the linked file.
	OriginalFileType FileType `protobuf:"varint,3,opt,name=originalFileType,proto3,enum=chorus.FileType" json:"originalFileType,omitempty"`
}

func (x *FileLinkDetails) Reset() {
	*x = FileLinkDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileLinkDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileLinkDetails) ProtoMessage() {}

func (x *FileLinkDetails) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileLinkDetails.ProtoReflect.Descriptor instead.
func (*FileLinkDetails) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{3}
}

func (x *FileLinkDetails) GetCreatedDate() *DateTime {
	if x != nil {
		return x.CreatedDate
	}
	return nil
}

func (x *FileLinkDetails) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FileLinkDetails) GetLinkName() string {
	if x != nil {
		return x.LinkName
	}
	return ""
}

func (x *FileLinkDetails) GetModifiedDate() *DateTime {
	if x != nil {
		return x.ModifiedDate
	}
	return nil
}

func (x *FileLinkDetails) GetOriginalFileId() string {
	if x != nil {
		return x.OriginalFileId
	}
	return ""
}

func (x *FileLinkDetails) GetOriginalFileType() FileType {
	if x != nil {
		return x.OriginalFileType
	}
	return FileType_PICTURE
}

type FilesRequests struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FilesRequests) Reset() {
	*x = FilesRequests{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilesRequests) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilesRequests) ProtoMessage() {}

func (x *FilesRequests) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilesRequests.ProtoReflect.Descriptor instead.
func (*FilesRequests) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{4}
}

type FilesResponses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FilesResponses) Reset() {
	*x = FilesResponses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilesResponses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilesResponses) ProtoMessage() {}

func (x *FilesResponses) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilesResponses.ProtoReflect.Descriptor instead.
func (*FilesResponses) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{5}
}

// Generic details about a file in Chorus.
type GenericDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GenericDetails) Reset() {
	*x = GenericDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenericDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericDetails) ProtoMessage() {}

func (x *GenericDetails) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericDetails.ProtoReflect.Descriptor instead.
func (*GenericDetails) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{6}
}

// Image specific details about a file in Chorus.
type ImageDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Image height in pixels
	Height int64 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	// Image width in pixels
	Width int64 `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
}

func (x *ImageDetails) Reset() {
	*x = ImageDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageDetails) ProtoMessage() {}

func (x *ImageDetails) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageDetails.ProtoReflect.Descriptor instead.
func (*ImageDetails) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{7}
}

func (x *ImageDetails) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *ImageDetails) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

// One of multiple media specific details of a file in Chorus.
type MediaDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Details:
	//	*MediaDetails_Audio
	//	*MediaDetails_Document
	//	*MediaDetails_Generic
	//	*MediaDetails_Image
	//	*MediaDetails_Video
	Details isMediaDetails_Details `protobuf_oneof:"details"`
}

func (x *MediaDetails) Reset() {
	*x = MediaDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaDetails) ProtoMessage() {}

func (x *MediaDetails) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaDetails.ProtoReflect.Descriptor instead.
func (*MediaDetails) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{8}
}

func (m *MediaDetails) GetDetails() isMediaDetails_Details {
	if m != nil {
		return m.Details
	}
	return nil
}

func (x *MediaDetails) GetAudio() *AudioDetails {
	if x, ok := x.GetDetails().(*MediaDetails_Audio); ok {
		return x.Audio
	}
	return nil
}

func (x *MediaDetails) GetDocument() *DocumentDetails {
	if x, ok := x.GetDetails().(*MediaDetails_Document); ok {
		return x.Document
	}
	return nil
}

func (x *MediaDetails) GetGeneric() *GenericDetails {
	if x, ok := x.GetDetails().(*MediaDetails_Generic); ok {
		return x.Generic
	}
	return nil
}

func (x *MediaDetails) GetImage() *ImageDetails {
	if x, ok := x.GetDetails().(*MediaDetails_Image); ok {
		return x.Image
	}
	return nil
}

func (x *MediaDetails) GetVideo() *VideoDetails {
	if x, ok := x.GetDetails().(*MediaDetails_Video); ok {
		return x.Video
	}
	return nil
}

type isMediaDetails_Details interface {
	isMediaDetails_Details()
}

type MediaDetails_Audio struct {
	// Specific details about an audio file
	Audio *AudioDetails `protobuf:"bytes,1,opt,name=audio,proto3,oneof"`
}

type MediaDetails_Document struct {
	// Specific details about a document
	Document *DocumentDetails `protobuf:"bytes,4,opt,name=document,proto3,oneof"`
}

type MediaDetails_Generic struct {
	// A catch-all details type for generic files
	Generic *GenericDetails `protobuf:"bytes,5,opt,name=generic,proto3,oneof"`
}

type MediaDetails_Image struct {
	// Specific details about an image file
	Image *ImageDetails `protobuf:"bytes,3,opt,name=image,proto3,oneof"`
}

type MediaDetails_Video struct {
	// Specific details about a video file
	Video *VideoDetails `protobuf:"bytes,2,opt,name=video,proto3,oneof"`
}

func (*MediaDetails_Audio) isMediaDetails_Details() {}

func (*MediaDetails_Document) isMediaDetails_Details() {}

func (*MediaDetails_Generic) isMediaDetails_Details() {}

func (*MediaDetails_Image) isMediaDetails_Details() {}

func (*MediaDetails_Video) isMediaDetails_Details() {}

// Details about a thumbnail for a file.
type ThumbDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Height in pixels
	Height int64 `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	// The URL to access the thumbnail
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// Width in pixels
	Width int64 `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`
}

func (x *ThumbDetails) Reset() {
	*x = ThumbDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThumbDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThumbDetails) ProtoMessage() {}

func (x *ThumbDetails) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThumbDetails.ProtoReflect.Descriptor instead.
func (*ThumbDetails) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{9}
}

func (x *ThumbDetails) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *ThumbDetails) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ThumbDetails) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

// A collection of available thumbnail sizes/types for a file.
type Thumbnails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Large  *ThumbDetails `protobuf:"bytes,3,opt,name=large,proto3" json:"large,omitempty"`
	Medium *ThumbDetails `protobuf:"bytes,2,opt,name=medium,proto3" json:"medium,omitempty"`
	Small  *ThumbDetails `protobuf:"bytes,1,opt,name=small,proto3" json:"small,omitempty"`
}

func (x *Thumbnails) Reset() {
	*x = Thumbnails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Thumbnails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Thumbnails) ProtoMessage() {}

func (x *Thumbnails) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Thumbnails.ProtoReflect.Descriptor instead.
func (*Thumbnails) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{10}
}

func (x *Thumbnails) GetLarge() *ThumbDetails {
	if x != nil {
		return x.Large
	}
	return nil
}

func (x *Thumbnails) GetMedium() *ThumbDetails {
	if x != nil {
		return x.Medium
	}
	return nil
}

func (x *Thumbnails) GetSmall() *ThumbDetails {
	if x != nil {
		return x.Small
	}
	return nil
}

// Video specific details about a file in Chorus.
type VideoDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Video duration in seconds
	DurationSecs float64 `protobuf:"fixed64,3,opt,name=durationSecs,proto3" json:"durationSecs,omitempty"`
	// Video framerate in frames per second
	Framerate float64 `protobuf:"fixed64,4,opt,name=framerate,proto3" json:"framerate,omitempty"`
	// Video height in pixels
	Height int64 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	// Video width in pixels
	Width int64 `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
}

func (x *VideoDetails) Reset() {
	*x = VideoDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoDetails) ProtoMessage() {}

func (x *VideoDetails) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoDetails.ProtoReflect.Descriptor instead.
func (*VideoDetails) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{11}
}

func (x *VideoDetails) GetDurationSecs() float64 {
	if x != nil {
		return x.DurationSecs
	}
	return 0
}

func (x *VideoDetails) GetFramerate() float64 {
	if x != nil {
		return x.Framerate
	}
	return 0
}

func (x *VideoDetails) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *VideoDetails) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

type FilesRequests_Attach struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The IDs of the File(s) to attach
	AttachedFileIds []string `protobuf:"bytes,2,rep,name=attachedFileIds,proto3" json:"attachedFileIds,omitempty"`
	// The ID of the File to which the attachment should be added
	FileId string `protobuf:"bytes,1,opt,name=fileId,proto3" json:"fileId,omitempty"`
}

func (x *FilesRequests_Attach) Reset() {
	*x = FilesRequests_Attach{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilesRequests_Attach) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilesRequests_Attach) ProtoMessage() {}

func (x *FilesRequests_Attach) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilesRequests_Attach.ProtoReflect.Descriptor instead.
func (*FilesRequests_Attach) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{4, 0}
}

func (x *FilesRequests_Attach) GetAttachedFileIds() []string {
	if x != nil {
		return x.AttachedFileIds
	}
	return nil
}

func (x *FilesRequests_Attach) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

type FilesRequests_DeleteDirectUrl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the file for which to revoke the Direct URLs.
	FileId string `protobuf:"bytes,1,opt,name=fileId,proto3" json:"fileId,omitempty"`
}

func (x *FilesRequests_DeleteDirectUrl) Reset() {
	*x = FilesRequests_DeleteDirectUrl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilesRequests_DeleteDirectUrl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilesRequests_DeleteDirectUrl) ProtoMessage() {}

func (x *FilesRequests_DeleteDirectUrl) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilesRequests_DeleteDirectUrl.ProtoReflect.Descriptor instead.
func (*FilesRequests_DeleteDirectUrl) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{4, 1}
}

func (x *FilesRequests_DeleteDirectUrl) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

type FilesRequests_Detach struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the File to remove as an attachment
	AttachedFileId string `protobuf:"bytes,2,opt,name=attachedFileId,proto3" json:"attachedFileId,omitempty"`
	// The ID of the File from which the attachment should be removed
	FileId string `protobuf:"bytes,1,opt,name=fileId,proto3" json:"fileId,omitempty"`
}

func (x *FilesRequests_Detach) Reset() {
	*x = FilesRequests_Detach{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilesRequests_Detach) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilesRequests_Detach) ProtoMessage() {}

func (x *FilesRequests_Detach) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilesRequests_Detach.ProtoReflect.Descriptor instead.
func (*FilesRequests_Detach) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{4, 2}
}

func (x *FilesRequests_Detach) GetAttachedFileId() string {
	if x != nil {
		return x.AttachedFileId
	}
	return ""
}

func (x *FilesRequests_Detach) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

type FilesRequests_DetachAll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The file to update
	FileId string `protobuf:"bytes,1,opt,name=fileId,proto3" json:"fileId,omitempty"`
}

func (x *FilesRequests_DetachAll) Reset() {
	*x = FilesRequests_DetachAll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilesRequests_DetachAll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilesRequests_DetachAll) ProtoMessage() {}

func (x *FilesRequests_DetachAll) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilesRequests_DetachAll.ProtoReflect.Descriptor instead.
func (*FilesRequests_DetachAll) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{4, 3}
}

func (x *FilesRequests_DetachAll) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

type FilesRequests_Get struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the file
	FileId string `protobuf:"bytes,1,opt,name=fileId,proto3" json:"fileId,omitempty"`
}

func (x *FilesRequests_Get) Reset() {
	*x = FilesRequests_Get{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilesRequests_Get) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilesRequests_Get) ProtoMessage() {}

func (x *FilesRequests_Get) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilesRequests_Get.ProtoReflect.Descriptor instead.
func (*FilesRequests_Get) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{4, 4}
}

func (x *FilesRequests_Get) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

type FilesRequests_GetAttachments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the File for which to list attachments
	FileId string `protobuf:"bytes,1,opt,name=fileId,proto3" json:"fileId,omitempty"`
}

func (x *FilesRequests_GetAttachments) Reset() {
	*x = FilesRequests_GetAttachments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilesRequests_GetAttachments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilesRequests_GetAttachments) ProtoMessage() {}

func (x *FilesRequests_GetAttachments) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilesRequests_GetAttachments.ProtoReflect.Descriptor instead.
func (*FilesRequests_GetAttachments) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{4, 5}
}

func (x *FilesRequests_GetAttachments) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

type FilesRequests_GetDirectUrl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the file for which to get the Direct URL.
	FileId string `protobuf:"bytes,1,opt,name=fileId,proto3" json:"fileId,omitempty"`
	// Settings to control how the returned file looks. Supplying no
	// settings will return a link to the original file.
	Settings *DirectUrlSettings `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *FilesRequests_GetDirectUrl) Reset() {
	*x = FilesRequests_GetDirectUrl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilesRequests_GetDirectUrl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilesRequests_GetDirectUrl) ProtoMessage() {}

func (x *FilesRequests_GetDirectUrl) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilesRequests_GetDirectUrl.ProtoReflect.Descriptor instead.
func (*FilesRequests_GetDirectUrl) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{4, 6}
}

func (x *FilesRequests_GetDirectUrl) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *FilesRequests_GetDirectUrl) GetSettings() *DirectUrlSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type FilesRequests_GetLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the file link
	LinkId string `protobuf:"bytes,1,opt,name=linkId,proto3" json:"linkId,omitempty"`
}

func (x *FilesRequests_GetLink) Reset() {
	*x = FilesRequests_GetLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilesRequests_GetLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilesRequests_GetLink) ProtoMessage() {}

func (x *FilesRequests_GetLink) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilesRequests_GetLink.ProtoReflect.Descriptor instead.
func (*FilesRequests_GetLink) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{4, 7}
}

func (x *FilesRequests_GetLink) GetLinkId() string {
	if x != nil {
		return x.LinkId
	}
	return ""
}

type FilesRequests_GetLinkMulti struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The IDs of the file links
	LinkIds []string `protobuf:"bytes,1,rep,name=linkIds,proto3" json:"linkIds,omitempty"`
}

func (x *FilesRequests_GetLinkMulti) Reset() {
	*x = FilesRequests_GetLinkMulti{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilesRequests_GetLinkMulti) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilesRequests_GetLinkMulti) ProtoMessage() {}

func (x *FilesRequests_GetLinkMulti) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilesRequests_GetLinkMulti.ProtoReflect.Descriptor instead.
func (*FilesRequests_GetLinkMulti) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{4, 8}
}

func (x *FilesRequests_GetLinkMulti) GetLinkIds() []string {
	if x != nil {
		return x.LinkIds
	}
	return nil
}

type FilesRequests_GetMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The files to get metadata for
	FileId string `protobuf:"bytes,1,opt,name=fileId,proto3" json:"fileId,omitempty"`
}

func (x *FilesRequests_GetMetadata) Reset() {
	*x = FilesRequests_GetMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilesRequests_GetMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilesRequests_GetMetadata) ProtoMessage() {}

func (x *FilesRequests_GetMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilesRequests_GetMetadata.ProtoReflect.Descriptor instead.
func (*FilesRequests_GetMetadata) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{4, 9}
}

func (x *FilesRequests_GetMetadata) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

type FilesRequests_GetMulti struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The IDs of the files
	FileIds []string `protobuf:"bytes,1,rep,name=fileIds,proto3" json:"fileIds,omitempty"`
}

func (x *FilesRequests_GetMulti) Reset() {
	*x = FilesRequests_GetMulti{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilesRequests_GetMulti) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilesRequests_GetMulti) ProtoMessage() {}

func (x *FilesRequests_GetMulti) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilesRequests_GetMulti.ProtoReflect.Descriptor instead.
func (*FilesRequests_GetMulti) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{4, 10}
}

func (x *FilesRequests_GetMulti) GetFileIds() []string {
	if x != nil {
		return x.FileIds
	}
	return nil
}

type FilesRequests_GetTemporaryDirectUrl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the file for which to get the Direct URL
	FileId string `protobuf:"bytes,1,opt,name=fileId,proto3" json:"fileId,omitempty"`
	// Settings to control how the returned file looks. Supplying no
	// settings will return a link to the original file.
	Settings *DirectUrlSettings `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *FilesRequests_GetTemporaryDirectUrl) Reset() {
	*x = FilesRequests_GetTemporaryDirectUrl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilesRequests_GetTemporaryDirectUrl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilesRequests_GetTemporaryDirectUrl) ProtoMessage() {}

func (x *FilesRequests_GetTemporaryDirectUrl) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilesRequests_GetTemporaryDirectUrl.ProtoReflect.Descriptor instead.
func (*FilesRequests_GetTemporaryDirectUrl) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{4, 11}
}

func (x *FilesRequests_GetTemporaryDirectUrl) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *FilesRequests_GetTemporaryDirectUrl) GetSettings() *DirectUrlSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type FilesResponses_Attach struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []*FileDetails `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *FilesResponses_Attach) Reset() {
	*x = FilesResponses_Attach{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilesResponses_Attach) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilesResponses_Attach) ProtoMessage() {}

func (x *FilesResponses_Attach) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilesResponses_Attach.ProtoReflect.Descriptor instead.
func (*FilesResponses_Attach) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{5, 0}
}

func (x *FilesResponses_Attach) GetResponse() []*FileDetails {
	if x != nil {
		return x.Response
	}
	return nil
}

type FilesResponses_DeleteDirectUrl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FilesResponses_DeleteDirectUrl) Reset() {
	*x = FilesResponses_DeleteDirectUrl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilesResponses_DeleteDirectUrl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilesResponses_DeleteDirectUrl) ProtoMessage() {}

func (x *FilesResponses_DeleteDirectUrl) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilesResponses_DeleteDirectUrl.ProtoReflect.Descriptor instead.
func (*FilesResponses_DeleteDirectUrl) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{5, 1}
}

type FilesResponses_Detach struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []*FileDetails `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *FilesResponses_Detach) Reset() {
	*x = FilesResponses_Detach{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilesResponses_Detach) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilesResponses_Detach) ProtoMessage() {}

func (x *FilesResponses_Detach) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilesResponses_Detach.ProtoReflect.Descriptor instead.
func (*FilesResponses_Detach) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{5, 2}
}

func (x *FilesResponses_Detach) GetResponse() []*FileDetails {
	if x != nil {
		return x.Response
	}
	return nil
}

type FilesResponses_DetachAll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FilesResponses_DetachAll) Reset() {
	*x = FilesResponses_DetachAll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilesResponses_DetachAll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilesResponses_DetachAll) ProtoMessage() {}

func (x *FilesResponses_DetachAll) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilesResponses_DetachAll.ProtoReflect.Descriptor instead.
func (*FilesResponses_DetachAll) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{5, 3}
}

type FilesResponses_GetAttachments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []*FileDetails `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *FilesResponses_GetAttachments) Reset() {
	*x = FilesResponses_GetAttachments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilesResponses_GetAttachments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilesResponses_GetAttachments) ProtoMessage() {}

func (x *FilesResponses_GetAttachments) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilesResponses_GetAttachments.ProtoReflect.Descriptor instead.
func (*FilesResponses_GetAttachments) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{5, 4}
}

func (x *FilesResponses_GetAttachments) GetResponse() []*FileDetails {
	if x != nil {
		return x.Response
	}
	return nil
}

type FilesResponses_GetDirectUrl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response string `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *FilesResponses_GetDirectUrl) Reset() {
	*x = FilesResponses_GetDirectUrl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilesResponses_GetDirectUrl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilesResponses_GetDirectUrl) ProtoMessage() {}

func (x *FilesResponses_GetDirectUrl) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilesResponses_GetDirectUrl.ProtoReflect.Descriptor instead.
func (*FilesResponses_GetDirectUrl) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{5, 5}
}

func (x *FilesResponses_GetDirectUrl) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

type FilesResponses_GetLinkMulti struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []*FileLinkDetails `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *FilesResponses_GetLinkMulti) Reset() {
	*x = FilesResponses_GetLinkMulti{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilesResponses_GetLinkMulti) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilesResponses_GetLinkMulti) ProtoMessage() {}

func (x *FilesResponses_GetLinkMulti) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilesResponses_GetLinkMulti.ProtoReflect.Descriptor instead.
func (*FilesResponses_GetLinkMulti) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{5, 6}
}

func (x *FilesResponses_GetLinkMulti) GetResponse() []*FileLinkDetails {
	if x != nil {
		return x.Response
	}
	return nil
}

type FilesResponses_GetMulti struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []*FileDetails `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *FilesResponses_GetMulti) Reset() {
	*x = FilesResponses_GetMulti{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilesResponses_GetMulti) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilesResponses_GetMulti) ProtoMessage() {}

func (x *FilesResponses_GetMulti) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilesResponses_GetMulti.ProtoReflect.Descriptor instead.
func (*FilesResponses_GetMulti) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{5, 7}
}

func (x *FilesResponses_GetMulti) GetResponse() []*FileDetails {
	if x != nil {
		return x.Response
	}
	return nil
}

type FilesResponses_GetTemporaryDirectUrl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response string `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *FilesResponses_GetTemporaryDirectUrl) Reset() {
	*x = FilesResponses_GetTemporaryDirectUrl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_files_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilesResponses_GetTemporaryDirectUrl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilesResponses_GetTemporaryDirectUrl) ProtoMessage() {}

func (x *FilesResponses_GetTemporaryDirectUrl) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilesResponses_GetTemporaryDirectUrl.ProtoReflect.Descriptor instead.
func (*FilesResponses_GetTemporaryDirectUrl) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{5, 8}
}

func (x *FilesResponses_GetTemporaryDirectUrl) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

var File_files_proto protoreflect.FileDescriptor

var file_files_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63,
	0x68, 0x6f, 0x72, 0x75, 0x73, 0x1a, 0x0e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x10, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x75, 0x72, 0x6c, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x32, 0x0a, 0x0c, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x63, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x73, 0x22, 0x5d, 0x0a, 0x0f, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x22, 0xe9, 0x04, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x61, 0x6e, 0x56, 0x69, 0x65,
	0x77, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0f, 0x63, 0x61, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x12, 0x32, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x44,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75,
	0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x44, 0x65,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x76, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73,
	0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x05, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x12, 0x34, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x68, 0x6f,
	0x72, 0x75, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0c, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x46, 0x0a, 0x0f, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x0f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x36, 0x0a, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x32,
	0x0a, 0x0a, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x54, 0x68, 0x75, 0x6d,
	0x62, 0x6e, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0a, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69,
	0x6c, 0x73, 0x22, 0x8d, 0x02, 0x0a, 0x0f, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x32, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x68,
	0x6f, 0x72, 0x75, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69,
	0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x69,
	0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63,
	0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0c,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10,
	0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x9f, 0x05, 0x0a, 0x0d, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x1a, 0x4a, 0x0a, 0x06, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x12, 0x28,
	0x0a, 0x0f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65,
	0x64, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64,
	0x1a, 0x29, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x1a, 0x48, 0x0a, 0x06, 0x44,
	0x65, 0x74, 0x61, 0x63, 0x68, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65,
	0x64, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66,
	0x69, 0x6c, 0x65, 0x49, 0x64, 0x1a, 0x23, 0x0a, 0x09, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x41,
	0x6c, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x1a, 0x1d, 0x0a, 0x03, 0x47, 0x65,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x1a, 0x28, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x66,
	0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x64, 0x1a, 0x5d, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x08, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x1a, 0x21, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x16, 0x0a,
	0x06, 0x6c, 0x69, 0x6e, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c,
	0x69, 0x6e, 0x6b, 0x49, 0x64, 0x1a, 0x28, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x49, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x49, 0x64, 0x73, 0x1a,
	0x25, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x1a, 0x24, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x1a, 0x66, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x35, 0x0a,
	0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55,
	0x72, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x22, 0xcc, 0x03, 0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x1a, 0x39, 0x0a, 0x06, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x12, 0x2f, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x1a, 0x11, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x55, 0x72, 0x6c, 0x1a, 0x39, 0x0a, 0x06, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x12,
	0x2f, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x1a, 0x0b, 0x0a, 0x09, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x41, 0x6c, 0x6c, 0x1a, 0x41, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x2f, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x1a, 0x2a, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x43, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x12, 0x33, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x6e, 0x6b,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x1a, 0x3b, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x12, 0x2f, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x33,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x3c, 0x0a, 0x0c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x22, 0x8e, 0x02, 0x0a, 0x0c, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x2c, 0x0a, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x41, 0x75, 0x64,
	0x69, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x05, 0x61, 0x75, 0x64,
	0x69, 0x6f, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x00, 0x52,
	0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x07, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x68, 0x6f,
	0x72, 0x75, 0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x48, 0x00, 0x52, 0x07, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x12, 0x2c, 0x0a,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63,
	0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x68, 0x6f,
	0x72, 0x75, 0x73, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x48, 0x00, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x09, 0x0a, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x22, 0x4e, 0x0a, 0x0c, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x22, 0x92, 0x01, 0x0a, 0x0a, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x54, 0x68, 0x75, 0x6d,
	0x62, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x05, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x12,
	0x2c, 0x0a, 0x06, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x06, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x12, 0x2a, 0x0a,
	0x05, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63,
	0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x05, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x22, 0x7e, 0x0a, 0x0c, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0c, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x2a, 0x58, 0x0a, 0x08, 0x46, 0x69, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x49, 0x43, 0x54, 0x55, 0x52, 0x45,
	0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x4f, 0x56, 0x49, 0x45, 0x10, 0x01, 0x12, 0x0c, 0x0a,
	0x08, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x45,
	0x58, 0x45, 0x43, 0x55, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x4d,
	0x55, 0x53, 0x49, 0x43, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x49,
	0x43, 0x10, 0x05, 0x32, 0xf7, 0x07, 0x0a, 0x05, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x47, 0x0a,
	0x06, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x12, 0x1c, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x1a, 0x1d, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2e, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x25, 0x2e, 0x63, 0x68, 0x6f, 0x72,
	0x75, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c,
	0x1a, 0x26, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x06, 0x44, 0x65,
	0x74, 0x61, 0x63, 0x68, 0x12, 0x1c, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x74, 0x61,
	0x63, 0x68, 0x1a, 0x1d, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x63,
	0x68, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x09, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x41, 0x6c, 0x6c,
	0x12, 0x1f, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x41, 0x6c,
	0x6c, 0x1a, 0x20, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68,
	0x41, 0x6c, 0x6c, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x19, 0x2e, 0x63,
	0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x1a, 0x13, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x00, 0x12, 0x5f,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x24, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x25, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x00, 0x12,
	0x59, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x12,
	0x22, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x55, 0x72, 0x6c, 0x1a, 0x23, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x07, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x1d, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x6e, 0x6b, 0x1a, 0x17, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x00, 0x12,
	0x59, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x12,
	0x22, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x1a, 0x23, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x6e, 0x6b, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x21, 0x2e, 0x63, 0x68, 0x6f, 0x72,
	0x75, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x18, 0x2e, 0x63,
	0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x4d, 0x61, 0x70, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x12, 0x1e, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x1a, 0x1f, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x22, 0x00, 0x12, 0x74, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x65,
	0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c,
	0x12, 0x2b, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6f,
	0x72, 0x61, 0x72, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x1a, 0x2c, 0x2e,
	0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61,
	0x72, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x22, 0x00, 0x42, 0x0c, 0x5a,
	0x0a, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_files_proto_rawDescOnce sync.Once
	file_files_proto_rawDescData = file_files_proto_rawDesc
)

func file_files_proto_rawDescGZIP() []byte {
	file_files_proto_rawDescOnce.Do(func() {
		file_files_proto_rawDescData = protoimpl.X.CompressGZIP(file_files_proto_rawDescData)
	})
	return file_files_proto_rawDescData
}

var file_files_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_files_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_files_proto_goTypes = []interface{}{
	(FileType)(0),                                // 0: chorus.FileType
	(*AudioDetails)(nil),                         // 1: chorus.AudioDetails
	(*DocumentDetails)(nil),                      // 2: chorus.DocumentDetails
	(*FileDetails)(nil),                          // 3: chorus.FileDetails
	(*FileLinkDetails)(nil),                      // 4: chorus.FileLinkDetails
	(*FilesRequests)(nil),                        // 5: chorus.FilesRequests
	(*FilesResponses)(nil),                       // 6: chorus.FilesResponses
	(*GenericDetails)(nil),                       // 7: chorus.GenericDetails
	(*ImageDetails)(nil),                         // 8: chorus.ImageDetails
	(*MediaDetails)(nil),                         // 9: chorus.MediaDetails
	(*ThumbDetails)(nil),                         // 10: chorus.ThumbDetails
	(*Thumbnails)(nil),                           // 11: chorus.Thumbnails
	(*VideoDetails)(nil),                         // 12: chorus.VideoDetails
	(*FilesRequests_Attach)(nil),                 // 13: chorus.FilesRequests.Attach
	(*FilesRequests_DeleteDirectUrl)(nil),        // 14: chorus.FilesRequests.DeleteDirectUrl
	(*FilesRequests_Detach)(nil),                 // 15: chorus.FilesRequests.Detach
	(*FilesRequests_DetachAll)(nil),              // 16: chorus.FilesRequests.DetachAll
	(*FilesRequests_Get)(nil),                    // 17: chorus.FilesRequests.Get
	(*FilesRequests_GetAttachments)(nil),         // 18: chorus.FilesRequests.GetAttachments
	(*FilesRequests_GetDirectUrl)(nil),           // 19: chorus.FilesRequests.GetDirectUrl
	(*FilesRequests_GetLink)(nil),                // 20: chorus.FilesRequests.GetLink
	(*FilesRequests_GetLinkMulti)(nil),           // 21: chorus.FilesRequests.GetLinkMulti
	(*FilesRequests_GetMetadata)(nil),            // 22: chorus.FilesRequests.GetMetadata
	(*FilesRequests_GetMulti)(nil),               // 23: chorus.FilesRequests.GetMulti
	(*FilesRequests_GetTemporaryDirectUrl)(nil),  // 24: chorus.FilesRequests.GetTemporaryDirectUrl
	(*FilesResponses_Attach)(nil),                // 25: chorus.FilesResponses.Attach
	(*FilesResponses_DeleteDirectUrl)(nil),       // 26: chorus.FilesResponses.DeleteDirectUrl
	(*FilesResponses_Detach)(nil),                // 27: chorus.FilesResponses.Detach
	(*FilesResponses_DetachAll)(nil),             // 28: chorus.FilesResponses.DetachAll
	(*FilesResponses_GetAttachments)(nil),        // 29: chorus.FilesResponses.GetAttachments
	(*FilesResponses_GetDirectUrl)(nil),          // 30: chorus.FilesResponses.GetDirectUrl
	(*FilesResponses_GetLinkMulti)(nil),          // 31: chorus.FilesResponses.GetLinkMulti
	(*FilesResponses_GetMulti)(nil),              // 32: chorus.FilesResponses.GetMulti
	(*FilesResponses_GetTemporaryDirectUrl)(nil), // 33: chorus.FilesResponses.GetTemporaryDirectUrl
	(*DateTime)(nil),                             // 34: chorus.DateTime
	(*wrappers.StringValue)(nil),                 // 35: google.protobuf.StringValue
	(*DirectUrlSettings)(nil),                    // 36: chorus.DirectUrlSettings
	(*MetadataValueMap)(nil),                     // 37: chorus.MetadataValueMap
}
var file_files_proto_depIdxs = []int32{
	34, // 0: chorus.FileDetails.createdDate:type_name -> chorus.DateTime
	0,  // 1: chorus.FileDetails.fileType:type_name -> chorus.FileType
	9,  // 2: chorus.FileDetails.media:type_name -> chorus.MediaDetails
	34, // 3: chorus.FileDetails.modifiedDate:type_name -> chorus.DateTime
	35, // 4: chorus.FileDetails.originalAssetId:type_name -> google.protobuf.StringValue
	35, // 5: chorus.FileDetails.ownerId:type_name -> google.protobuf.StringValue
	11, // 6: chorus.FileDetails.thumbnails:type_name -> chorus.Thumbnails
	34, // 7: chorus.FileLinkDetails.createdDate:type_name -> chorus.DateTime
	34, // 8: chorus.FileLinkDetails.modifiedDate:type_name -> chorus.DateTime
	0,  // 9: chorus.FileLinkDetails.originalFileType:type_name -> chorus.FileType
	1,  // 10: chorus.MediaDetails.audio:type_name -> chorus.AudioDetails
	2,  // 11: chorus.MediaDetails.document:type_name -> chorus.DocumentDetails
	7,  // 12: chorus.MediaDetails.generic:type_name -> chorus.GenericDetails
	8,  // 13: chorus.MediaDetails.image:type_name -> chorus.ImageDetails
	12, // 14: chorus.MediaDetails.video:type_name -> chorus.VideoDetails
	10, // 15: chorus.Thumbnails.large:type_name -> chorus.ThumbDetails
	10, // 16: chorus.Thumbnails.medium:type_name -> chorus.ThumbDetails
	10, // 17: chorus.Thumbnails.small:type_name -> chorus.ThumbDetails
	36, // 18: chorus.FilesRequests.GetDirectUrl.settings:type_name -> chorus.DirectUrlSettings
	36, // 19: chorus.FilesRequests.GetTemporaryDirectUrl.settings:type_name -> chorus.DirectUrlSettings
	3,  // 20: chorus.FilesResponses.Attach.response:type_name -> chorus.FileDetails
	3,  // 21: chorus.FilesResponses.Detach.response:type_name -> chorus.FileDetails
	3,  // 22: chorus.FilesResponses.GetAttachments.response:type_name -> chorus.FileDetails
	4,  // 23: chorus.FilesResponses.GetLinkMulti.response:type_name -> chorus.FileLinkDetails
	3,  // 24: chorus.FilesResponses.GetMulti.response:type_name -> chorus.FileDetails
	13, // 25: chorus.Files.Attach:input_type -> chorus.FilesRequests.Attach
	14, // 26: chorus.Files.DeleteDirectUrl:input_type -> chorus.FilesRequests.DeleteDirectUrl
	15, // 27: chorus.Files.Detach:input_type -> chorus.FilesRequests.Detach
	16, // 28: chorus.Files.DetachAll:input_type -> chorus.FilesRequests.DetachAll
	17, // 29: chorus.Files.Get:input_type -> chorus.FilesRequests.Get
	18, // 30: chorus.Files.GetAttachments:input_type -> chorus.FilesRequests.GetAttachments
	19, // 31: chorus.Files.GetDirectUrl:input_type -> chorus.FilesRequests.GetDirectUrl
	20, // 32: chorus.Files.GetLink:input_type -> chorus.FilesRequests.GetLink
	21, // 33: chorus.Files.GetLinkMulti:input_type -> chorus.FilesRequests.GetLinkMulti
	22, // 34: chorus.Files.GetMetadata:input_type -> chorus.FilesRequests.GetMetadata
	23, // 35: chorus.Files.GetMulti:input_type -> chorus.FilesRequests.GetMulti
	24, // 36: chorus.Files.GetTemporaryDirectUrl:input_type -> chorus.FilesRequests.GetTemporaryDirectUrl
	25, // 37: chorus.Files.Attach:output_type -> chorus.FilesResponses.Attach
	26, // 38: chorus.Files.DeleteDirectUrl:output_type -> chorus.FilesResponses.DeleteDirectUrl
	27, // 39: chorus.Files.Detach:output_type -> chorus.FilesResponses.Detach
	28, // 40: chorus.Files.DetachAll:output_type -> chorus.FilesResponses.DetachAll
	3,  // 41: chorus.Files.Get:output_type -> chorus.FileDetails
	29, // 42: chorus.Files.GetAttachments:output_type -> chorus.FilesResponses.GetAttachments
	30, // 43: chorus.Files.GetDirectUrl:output_type -> chorus.FilesResponses.GetDirectUrl
	4,  // 44: chorus.Files.GetLink:output_type -> chorus.FileLinkDetails
	31, // 45: chorus.Files.GetLinkMulti:output_type -> chorus.FilesResponses.GetLinkMulti
	37, // 46: chorus.Files.GetMetadata:output_type -> chorus.MetadataValueMap
	32, // 47: chorus.Files.GetMulti:output_type -> chorus.FilesResponses.GetMulti
	33, // 48: chorus.Files.GetTemporaryDirectUrl:output_type -> chorus.FilesResponses.GetTemporaryDirectUrl
	37, // [37:49] is the sub-list for method output_type
	25, // [25:37] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_files_proto_init() }
func file_files_proto_init() {
	if File_files_proto != nil {
		return
	}
	file_metadata_proto_init()
	file_core_proto_init()
	file_directurls_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_files_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AudioDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileLinkDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilesRequests); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilesResponses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenericDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThumbDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Thumbnails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilesRequests_Attach); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilesRequests_DeleteDirectUrl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilesRequests_Detach); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilesRequests_DetachAll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilesRequests_Get); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilesRequests_GetAttachments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilesRequests_GetDirectUrl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilesRequests_GetLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilesRequests_GetLinkMulti); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilesRequests_GetMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilesRequests_GetMulti); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilesRequests_GetTemporaryDirectUrl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilesResponses_Attach); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilesResponses_DeleteDirectUrl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilesResponses_Detach); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilesResponses_DetachAll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilesResponses_GetAttachments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilesResponses_GetDirectUrl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilesResponses_GetLinkMulti); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilesResponses_GetMulti); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_files_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilesResponses_GetTemporaryDirectUrl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_files_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*MediaDetails_Audio)(nil),
		(*MediaDetails_Document)(nil),
		(*MediaDetails_Generic)(nil),
		(*MediaDetails_Image)(nil),
		(*MediaDetails_Video)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_files_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_files_proto_goTypes,
		DependencyIndexes: file_files_proto_depIdxs,
		EnumInfos:         file_files_proto_enumTypes,
		MessageInfos:      file_files_proto_msgTypes,
	}.Build()
	File_files_proto = out.File
	file_files_proto_rawDesc = nil
	file_files_proto_goTypes = nil
	file_files_proto_depIdxs = nil
}
