// This is a protobuf specifications for the Uploads module of the Third Light gRPC API for Chorus.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.6.1
// source: uploads.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Status of an upload.
type UploadDetails_Status int32

const (
	// upload batch is ready to receive files
	UploadDetails_Ready UploadDetails_Status = 0
	// has started receiving files
	UploadDetails_Started UploadDetails_Status = 1
	// has been marked as closed, but no files in the upload have started to be processed
	UploadDetails_Queued UploadDetails_Status = 2
	// has been marked as closed, and some files in the upload have started to be processed
	UploadDetails_Processing UploadDetails_Status = 3
	// has been marked as closed, and all files in the upload have been processed
	UploadDetails_Finished UploadDetails_Status = 4
)

// Enum value maps for UploadDetails_Status.
var (
	UploadDetails_Status_name = map[int32]string{
		0: "Ready",
		1: "Started",
		2: "Queued",
		3: "Processing",
		4: "Finished",
	}
	UploadDetails_Status_value = map[string]int32{
		"Ready":      0,
		"Started":    1,
		"Queued":     2,
		"Processing": 3,
		"Finished":   4,
	}
)

func (x UploadDetails_Status) Enum() *UploadDetails_Status {
	p := new(UploadDetails_Status)
	*p = x
	return p
}

func (x UploadDetails_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UploadDetails_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_uploads_proto_enumTypes[0].Descriptor()
}

func (UploadDetails_Status) Type() protoreflect.EnumType {
	return &file_uploads_proto_enumTypes[0]
}

func (x UploadDetails_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UploadDetails_Status.Descriptor instead.
func (UploadDetails_Status) EnumDescriptor() ([]byte, []int) {
	return file_uploads_proto_rawDescGZIP(), []int{0, 0}
}

// Details of a created upload session.
type UploadDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of files that have been cancelled before processing.
	CancelledCount int64 `protobuf:"varint,8,opt,name=cancelledCount,proto3" json:"cancelledCount,omitempty"`
	// The date/time that this object was created
	CreatedDate *DateTime `protobuf:"bytes,102,opt,name=createdDate,proto3" json:"createdDate,omitempty"`
	// ID of the destination folder for the upload.
	DestinationFolderId string `protobuf:"bytes,1,opt,name=destinationFolderId,proto3" json:"destinationFolderId,omitempty"`
	// Number of files that have been failed to process.
	FailedCount int64 `protobuf:"varint,7,opt,name=failedCount,proto3" json:"failedCount,omitempty"`
	// Unique ID of this object.
	Id string `protobuf:"bytes,101,opt,name=id,proto3" json:"id,omitempty"`
	// Indication of whether the upload is still accepting files. This will be `false` after 'finish' has been
	// called, or the upload has been cleaned up by the system.
	IsAcceptingFiles bool `protobuf:"varint,3,opt,name=isAcceptingFiles,proto3" json:"isAcceptingFiles,omitempty"`
	// The date/time that this object was last changed
	ModifiedDate *DateTime `protobuf:"bytes,103,opt,name=modifiedDate,proto3" json:"modifiedDate,omitempty"`
	// The URL to which files can be uploaded to using HTTP POST requests. The whole file should be posted raw.
	PostUrl string `protobuf:"bytes,2,opt,name=postUrl,proto3" json:"postUrl,omitempty"`
	// The current status of this upload batch.
	Status UploadDetails_Status `protobuf:"varint,4,opt,name=status,proto3,enum=chorus.UploadDetails_Status" json:"status,omitempty"`
	// Number of files that have been successfully processed.
	SuccessCount int64 `protobuf:"varint,6,opt,name=successCount,proto3" json:"successCount,omitempty"`
	// Total number of files in the upload batch.
	TotalCount int64 `protobuf:"varint,5,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
	// IDs of files that have been successfully uploaded.
	UploadedIds []string `protobuf:"bytes,9,rep,name=uploadedIds,proto3" json:"uploadedIds,omitempty"`
}

func (x *UploadDetails) Reset() {
	*x = UploadDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uploads_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadDetails) ProtoMessage() {}

func (x *UploadDetails) ProtoReflect() protoreflect.Message {
	mi := &file_uploads_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadDetails.ProtoReflect.Descriptor instead.
func (*UploadDetails) Descriptor() ([]byte, []int) {
	return file_uploads_proto_rawDescGZIP(), []int{0}
}

func (x *UploadDetails) GetCancelledCount() int64 {
	if x != nil {
		return x.CancelledCount
	}
	return 0
}

func (x *UploadDetails) GetCreatedDate() *DateTime {
	if x != nil {
		return x.CreatedDate
	}
	return nil
}

func (x *UploadDetails) GetDestinationFolderId() string {
	if x != nil {
		return x.DestinationFolderId
	}
	return ""
}

func (x *UploadDetails) GetFailedCount() int64 {
	if x != nil {
		return x.FailedCount
	}
	return 0
}

func (x *UploadDetails) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UploadDetails) GetIsAcceptingFiles() bool {
	if x != nil {
		return x.IsAcceptingFiles
	}
	return false
}

func (x *UploadDetails) GetModifiedDate() *DateTime {
	if x != nil {
		return x.ModifiedDate
	}
	return nil
}

func (x *UploadDetails) GetPostUrl() string {
	if x != nil {
		return x.PostUrl
	}
	return ""
}

func (x *UploadDetails) GetStatus() UploadDetails_Status {
	if x != nil {
		return x.Status
	}
	return UploadDetails_Ready
}

func (x *UploadDetails) GetSuccessCount() int64 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

func (x *UploadDetails) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *UploadDetails) GetUploadedIds() []string {
	if x != nil {
		return x.UploadedIds
	}
	return nil
}

type UploadsRequests struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UploadsRequests) Reset() {
	*x = UploadsRequests{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uploads_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadsRequests) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadsRequests) ProtoMessage() {}

func (x *UploadsRequests) ProtoReflect() protoreflect.Message {
	mi := &file_uploads_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadsRequests.ProtoReflect.Descriptor instead.
func (*UploadsRequests) Descriptor() ([]byte, []int) {
	return file_uploads_proto_rawDescGZIP(), []int{1}
}

type UploadsRequests_Create struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the container in which to upload
	DestinationFolderId string `protobuf:"bytes,1,opt,name=destinationFolderId,proto3" json:"destinationFolderId,omitempty"`
}

func (x *UploadsRequests_Create) Reset() {
	*x = UploadsRequests_Create{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uploads_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadsRequests_Create) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadsRequests_Create) ProtoMessage() {}

func (x *UploadsRequests_Create) ProtoReflect() protoreflect.Message {
	mi := &file_uploads_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadsRequests_Create.ProtoReflect.Descriptor instead.
func (*UploadsRequests_Create) Descriptor() ([]byte, []int) {
	return file_uploads_proto_rawDescGZIP(), []int{1, 0}
}

func (x *UploadsRequests_Create) GetDestinationFolderId() string {
	if x != nil {
		return x.DestinationFolderId
	}
	return ""
}

type UploadsRequests_Finish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the Upload to finish.
	UploadId string `protobuf:"bytes,1,opt,name=uploadId,proto3" json:"uploadId,omitempty"`
}

func (x *UploadsRequests_Finish) Reset() {
	*x = UploadsRequests_Finish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uploads_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadsRequests_Finish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadsRequests_Finish) ProtoMessage() {}

func (x *UploadsRequests_Finish) ProtoReflect() protoreflect.Message {
	mi := &file_uploads_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadsRequests_Finish.ProtoReflect.Descriptor instead.
func (*UploadsRequests_Finish) Descriptor() ([]byte, []int) {
	return file_uploads_proto_rawDescGZIP(), []int{1, 1}
}

func (x *UploadsRequests_Finish) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

type UploadsRequests_Get struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the Upload for which to get the details.
	UploadId string `protobuf:"bytes,1,opt,name=uploadId,proto3" json:"uploadId,omitempty"`
}

func (x *UploadsRequests_Get) Reset() {
	*x = UploadsRequests_Get{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uploads_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadsRequests_Get) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadsRequests_Get) ProtoMessage() {}

func (x *UploadsRequests_Get) ProtoReflect() protoreflect.Message {
	mi := &file_uploads_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadsRequests_Get.ProtoReflect.Descriptor instead.
func (*UploadsRequests_Get) Descriptor() ([]byte, []int) {
	return file_uploads_proto_rawDescGZIP(), []int{1, 2}
}

func (x *UploadsRequests_Get) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

var File_uploads_proto protoreflect.FileDescriptor

var file_uploads_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x06, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x1a, 0x0a, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xb3, 0x04, 0x0a, 0x0d, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c,
	0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x66, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x30, 0x0a, 0x13, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x73, 0x41, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x10, 0x69, 0x73, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x12, 0x34, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73,
	0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x55,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x55, 0x72,
	0x6c, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1c, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x75,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x49, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0b, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x49, 0x64, 0x73, 0x22, 0x4a, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x65, 0x61, 0x64, 0x79,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x10, 0x01, 0x12,
	0x0a, 0x0a, 0x06, 0x51, 0x75, 0x65, 0x75, 0x65, 0x64, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x10, 0x04, 0x22, 0x96, 0x01, 0x0a, 0x0f, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x1a, 0x3a, 0x0a,
	0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x64, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x24, 0x0a, 0x06, 0x46, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x1a,
	0x21, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x49, 0x64, 0x32, 0xcc, 0x01, 0x0a, 0x07, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x12, 0x41,
	0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75,
	0x73, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x1a, 0x15, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75,
	0x73, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22,
	0x00, 0x12, 0x41, 0x0a, 0x06, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x12, 0x1e, 0x2e, 0x63, 0x68,
	0x6f, 0x72, 0x75, 0x73, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x2e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x1a, 0x15, 0x2e, 0x63, 0x68,
	0x6f, 0x72, 0x75, 0x73, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x1b, 0x2e, 0x63, 0x68,
	0x6f, 0x72, 0x75, 0x73, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x1a, 0x15, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75,
	0x73, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22,
	0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_uploads_proto_rawDescOnce sync.Once
	file_uploads_proto_rawDescData = file_uploads_proto_rawDesc
)

func file_uploads_proto_rawDescGZIP() []byte {
	file_uploads_proto_rawDescOnce.Do(func() {
		file_uploads_proto_rawDescData = protoimpl.X.CompressGZIP(file_uploads_proto_rawDescData)
	})
	return file_uploads_proto_rawDescData
}

var file_uploads_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_uploads_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_uploads_proto_goTypes = []interface{}{
	(UploadDetails_Status)(0),      // 0: chorus.UploadDetails.Status
	(*UploadDetails)(nil),          // 1: chorus.UploadDetails
	(*UploadsRequests)(nil),        // 2: chorus.UploadsRequests
	(*UploadsRequests_Create)(nil), // 3: chorus.UploadsRequests.Create
	(*UploadsRequests_Finish)(nil), // 4: chorus.UploadsRequests.Finish
	(*UploadsRequests_Get)(nil),    // 5: chorus.UploadsRequests.Get
	(*DateTime)(nil),               // 6: chorus.DateTime
}
var file_uploads_proto_depIdxs = []int32{
	6, // 0: chorus.UploadDetails.createdDate:type_name -> chorus.DateTime
	6, // 1: chorus.UploadDetails.modifiedDate:type_name -> chorus.DateTime
	0, // 2: chorus.UploadDetails.status:type_name -> chorus.UploadDetails.Status
	3, // 3: chorus.Uploads.Create:input_type -> chorus.UploadsRequests.Create
	4, // 4: chorus.Uploads.Finish:input_type -> chorus.UploadsRequests.Finish
	5, // 5: chorus.Uploads.Get:input_type -> chorus.UploadsRequests.Get
	1, // 6: chorus.Uploads.Create:output_type -> chorus.UploadDetails
	1, // 7: chorus.Uploads.Finish:output_type -> chorus.UploadDetails
	1, // 8: chorus.Uploads.Get:output_type -> chorus.UploadDetails
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_uploads_proto_init() }
func file_uploads_proto_init() {
	if File_uploads_proto != nil {
		return
	}
	file_core_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_uploads_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uploads_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadsRequests); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uploads_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadsRequests_Create); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uploads_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadsRequests_Finish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uploads_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadsRequests_Get); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_uploads_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_uploads_proto_goTypes,
		DependencyIndexes: file_uploads_proto_depIdxs,
		EnumInfos:         file_uploads_proto_enumTypes,
		MessageInfos:      file_uploads_proto_msgTypes,
	}.Build()
	File_uploads_proto = out.File
	file_uploads_proto_rawDesc = nil
	file_uploads_proto_goTypes = nil
	file_uploads_proto_depIdxs = nil
}
