// This is a protobuf specifications for the ApiKeys module of the Third Light gRPC API for Chorus.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.6.1
// source: apikeys.proto

package protobuf

import (
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Chorus API key details
type ApiKeyDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The context of the API key
	// A context id is generally used to refer to a catalogue (e.g. Metadata Catalogue). It can identify the current user, a space, another user in the system or the site as a whole.
	// * `me`—this represents the currently authenticated user's Private Space,
	// * `group{numeric-identifier}`—this represents a Space. The `{numeric-identifier}` is an internal identifier. If you require an id for a given Space, then use the `context` from the Space's details,
	// * `user{numeric-identifier}`—this represents another user in the system. The `{numeric-identifier}` is an internal identifier. If you require an id for a given user, then use the `context` from the User's details,
	// * `dom0`—this represents the whole site.
	Context string `protobuf:"bytes,10,opt,name=context,proto3" json:"context,omitempty"`
	// The date/time that this object was created
	CreatedDate *DateTime `protobuf:"bytes,102,opt,name=createdDate,proto3" json:"createdDate,omitempty"`
	// Unique ID of this object.
	Id string `protobuf:"bytes,101,opt,name=id,proto3" json:"id,omitempty"`
	// An arbitrary chosen identifier for the API key
	Label string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	// The date/time that this object was last changed
	ModifiedDate *DateTime `protobuf:"bytes,103,opt,name=modifiedDate,proto3" json:"modifiedDate,omitempty"`
}

func (x *ApiKeyDetails) Reset() {
	*x = ApiKeyDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apikeys_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiKeyDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiKeyDetails) ProtoMessage() {}

func (x *ApiKeyDetails) ProtoReflect() protoreflect.Message {
	mi := &file_apikeys_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiKeyDetails.ProtoReflect.Descriptor instead.
func (*ApiKeyDetails) Descriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{0}
}

func (x *ApiKeyDetails) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

func (x *ApiKeyDetails) GetCreatedDate() *DateTime {
	if x != nil {
		return x.CreatedDate
	}
	return nil
}

func (x *ApiKeyDetails) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ApiKeyDetails) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *ApiKeyDetails) GetModifiedDate() *DateTime {
	if x != nil {
		return x.ModifiedDate
	}
	return nil
}

// Chorus API key details containing the token string, only returned
// on create operations
type ApiKeyDetailsWithToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The key token
	ApiKey string `protobuf:"bytes,20,opt,name=apiKey,proto3" json:"apiKey,omitempty"`
	// The context of the API key
	// A context id is generally used to refer to a catalogue (e.g. Metadata Catalogue). It can identify the current user, a space, another user in the system or the site as a whole.
	// * `me`—this represents the currently authenticated user's Private Space,
	// * `group{numeric-identifier}`—this represents a Space. The `{numeric-identifier}` is an internal identifier. If you require an id for a given Space, then use the `context` from the Space's details,
	// * `user{numeric-identifier}`—this represents another user in the system. The `{numeric-identifier}` is an internal identifier. If you require an id for a given user, then use the `context` from the User's details,
	// * `dom0`—this represents the whole site.
	Context string `protobuf:"bytes,10,opt,name=context,proto3" json:"context,omitempty"`
	// The date/time that this object was created
	CreatedDate *DateTime `protobuf:"bytes,102,opt,name=createdDate,proto3" json:"createdDate,omitempty"`
	// Unique ID of this object.
	Id string `protobuf:"bytes,101,opt,name=id,proto3" json:"id,omitempty"`
	// An arbitrary chosen identifier for the API key
	Label string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	// The date/time that this object was last changed
	ModifiedDate *DateTime `protobuf:"bytes,103,opt,name=modifiedDate,proto3" json:"modifiedDate,omitempty"`
}

func (x *ApiKeyDetailsWithToken) Reset() {
	*x = ApiKeyDetailsWithToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apikeys_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiKeyDetailsWithToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiKeyDetailsWithToken) ProtoMessage() {}

func (x *ApiKeyDetailsWithToken) ProtoReflect() protoreflect.Message {
	mi := &file_apikeys_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiKeyDetailsWithToken.ProtoReflect.Descriptor instead.
func (*ApiKeyDetailsWithToken) Descriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{1}
}

func (x *ApiKeyDetailsWithToken) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *ApiKeyDetailsWithToken) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

func (x *ApiKeyDetailsWithToken) GetCreatedDate() *DateTime {
	if x != nil {
		return x.CreatedDate
	}
	return nil
}

func (x *ApiKeyDetailsWithToken) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ApiKeyDetailsWithToken) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *ApiKeyDetailsWithToken) GetModifiedDate() *DateTime {
	if x != nil {
		return x.ModifiedDate
	}
	return nil
}

type ApiKeysRequests struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ApiKeysRequests) Reset() {
	*x = ApiKeysRequests{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apikeys_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiKeysRequests) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiKeysRequests) ProtoMessage() {}

func (x *ApiKeysRequests) ProtoReflect() protoreflect.Message {
	mi := &file_apikeys_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiKeysRequests.ProtoReflect.Descriptor instead.
func (*ApiKeysRequests) Descriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{2}
}

type ApiKeysResponses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ApiKeysResponses) Reset() {
	*x = ApiKeysResponses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apikeys_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiKeysResponses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiKeysResponses) ProtoMessage() {}

func (x *ApiKeysResponses) ProtoReflect() protoreflect.Message {
	mi := &file_apikeys_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiKeysResponses.ProtoReflect.Descriptor instead.
func (*ApiKeysResponses) Descriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{3}
}

// Settings to use when creating a new API key
type CreateApiKeyDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// An arbitrary chosen identifier for the API key
	Label string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *CreateApiKeyDetails) Reset() {
	*x = CreateApiKeyDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apikeys_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateApiKeyDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateApiKeyDetails) ProtoMessage() {}

func (x *CreateApiKeyDetails) ProtoReflect() protoreflect.Message {
	mi := &file_apikeys_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateApiKeyDetails.ProtoReflect.Descriptor instead.
func (*CreateApiKeyDetails) Descriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{4}
}

func (x *CreateApiKeyDetails) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

// Settings to use for updating an API key's details
type SettableApiKeyDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// An arbitrary chosen identifier for the API key
	Label *wrappers.StringValue `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *SettableApiKeyDetails) Reset() {
	*x = SettableApiKeyDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apikeys_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettableApiKeyDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettableApiKeyDetails) ProtoMessage() {}

func (x *SettableApiKeyDetails) ProtoReflect() protoreflect.Message {
	mi := &file_apikeys_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettableApiKeyDetails.ProtoReflect.Descriptor instead.
func (*SettableApiKeyDetails) Descriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{5}
}

func (x *SettableApiKeyDetails) GetLabel() *wrappers.StringValue {
	if x != nil {
		return x.Label
	}
	return nil
}

type ApiKeysRequests_CreateProfileKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Settings to use when creating the new API key
	Details *CreateApiKeyDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ApiKeysRequests_CreateProfileKey) Reset() {
	*x = ApiKeysRequests_CreateProfileKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apikeys_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiKeysRequests_CreateProfileKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiKeysRequests_CreateProfileKey) ProtoMessage() {}

func (x *ApiKeysRequests_CreateProfileKey) ProtoReflect() protoreflect.Message {
	mi := &file_apikeys_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiKeysRequests_CreateProfileKey.ProtoReflect.Descriptor instead.
func (*ApiKeysRequests_CreateProfileKey) Descriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ApiKeysRequests_CreateProfileKey) GetDetails() *CreateApiKeyDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ApiKeysRequests_CreateSiteKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Settings to use when creating the new API key
	Details *CreateApiKeyDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ApiKeysRequests_CreateSiteKey) Reset() {
	*x = ApiKeysRequests_CreateSiteKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apikeys_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiKeysRequests_CreateSiteKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiKeysRequests_CreateSiteKey) ProtoMessage() {}

func (x *ApiKeysRequests_CreateSiteKey) ProtoReflect() protoreflect.Message {
	mi := &file_apikeys_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiKeysRequests_CreateSiteKey.ProtoReflect.Descriptor instead.
func (*ApiKeysRequests_CreateSiteKey) Descriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{2, 1}
}

func (x *ApiKeysRequests_CreateSiteKey) GetDetails() *CreateApiKeyDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ApiKeysRequests_CreateSpacesKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Settings to use when creating the new API key
	Details *CreateApiKeyDetails `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
	// The space for which to create the API key
	SpaceId string `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
}

func (x *ApiKeysRequests_CreateSpacesKey) Reset() {
	*x = ApiKeysRequests_CreateSpacesKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apikeys_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiKeysRequests_CreateSpacesKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiKeysRequests_CreateSpacesKey) ProtoMessage() {}

func (x *ApiKeysRequests_CreateSpacesKey) ProtoReflect() protoreflect.Message {
	mi := &file_apikeys_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiKeysRequests_CreateSpacesKey.ProtoReflect.Descriptor instead.
func (*ApiKeysRequests_CreateSpacesKey) Descriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{2, 2}
}

func (x *ApiKeysRequests_CreateSpacesKey) GetDetails() *CreateApiKeyDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ApiKeysRequests_CreateSpacesKey) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

type ApiKeysRequests_Delete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the API key to delete
	ApiKeyId string `protobuf:"bytes,1,opt,name=apiKeyId,proto3" json:"apiKeyId,omitempty"`
}

func (x *ApiKeysRequests_Delete) Reset() {
	*x = ApiKeysRequests_Delete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apikeys_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiKeysRequests_Delete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiKeysRequests_Delete) ProtoMessage() {}

func (x *ApiKeysRequests_Delete) ProtoReflect() protoreflect.Message {
	mi := &file_apikeys_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiKeysRequests_Delete.ProtoReflect.Descriptor instead.
func (*ApiKeysRequests_Delete) Descriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{2, 3}
}

func (x *ApiKeysRequests_Delete) GetApiKeyId() string {
	if x != nil {
		return x.ApiKeyId
	}
	return ""
}

type ApiKeysRequests_Get struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// IDs of the API keys to fetch details for
	ApiKeyId string `protobuf:"bytes,1,opt,name=apiKeyId,proto3" json:"apiKeyId,omitempty"`
}

func (x *ApiKeysRequests_Get) Reset() {
	*x = ApiKeysRequests_Get{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apikeys_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiKeysRequests_Get) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiKeysRequests_Get) ProtoMessage() {}

func (x *ApiKeysRequests_Get) ProtoReflect() protoreflect.Message {
	mi := &file_apikeys_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiKeysRequests_Get.ProtoReflect.Descriptor instead.
func (*ApiKeysRequests_Get) Descriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{2, 4}
}

func (x *ApiKeysRequests_Get) GetApiKeyId() string {
	if x != nil {
		return x.ApiKeyId
	}
	return ""
}

type ApiKeysRequests_GetMulti struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// IDs of the API keys to fetch details for
	ApiKeyId []string `protobuf:"bytes,1,rep,name=apiKeyId,proto3" json:"apiKeyId,omitempty"`
}

func (x *ApiKeysRequests_GetMulti) Reset() {
	*x = ApiKeysRequests_GetMulti{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apikeys_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiKeysRequests_GetMulti) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiKeysRequests_GetMulti) ProtoMessage() {}

func (x *ApiKeysRequests_GetMulti) ProtoReflect() protoreflect.Message {
	mi := &file_apikeys_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiKeysRequests_GetMulti.ProtoReflect.Descriptor instead.
func (*ApiKeysRequests_GetMulti) Descriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{2, 5}
}

func (x *ApiKeysRequests_GetMulti) GetApiKeyId() []string {
	if x != nil {
		return x.ApiKeyId
	}
	return nil
}

type ApiKeysRequests_GetProfileKeys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ApiKeysRequests_GetProfileKeys) Reset() {
	*x = ApiKeysRequests_GetProfileKeys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apikeys_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiKeysRequests_GetProfileKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiKeysRequests_GetProfileKeys) ProtoMessage() {}

func (x *ApiKeysRequests_GetProfileKeys) ProtoReflect() protoreflect.Message {
	mi := &file_apikeys_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiKeysRequests_GetProfileKeys.ProtoReflect.Descriptor instead.
func (*ApiKeysRequests_GetProfileKeys) Descriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{2, 6}
}

type ApiKeysRequests_GetSiteKeys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ApiKeysRequests_GetSiteKeys) Reset() {
	*x = ApiKeysRequests_GetSiteKeys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apikeys_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiKeysRequests_GetSiteKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiKeysRequests_GetSiteKeys) ProtoMessage() {}

func (x *ApiKeysRequests_GetSiteKeys) ProtoReflect() protoreflect.Message {
	mi := &file_apikeys_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiKeysRequests_GetSiteKeys.ProtoReflect.Descriptor instead.
func (*ApiKeysRequests_GetSiteKeys) Descriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{2, 7}
}

type ApiKeysRequests_GetSpacesKeys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The space for which to get the API keys
	SpaceId string `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
}

func (x *ApiKeysRequests_GetSpacesKeys) Reset() {
	*x = ApiKeysRequests_GetSpacesKeys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apikeys_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiKeysRequests_GetSpacesKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiKeysRequests_GetSpacesKeys) ProtoMessage() {}

func (x *ApiKeysRequests_GetSpacesKeys) ProtoReflect() protoreflect.Message {
	mi := &file_apikeys_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiKeysRequests_GetSpacesKeys.ProtoReflect.Descriptor instead.
func (*ApiKeysRequests_GetSpacesKeys) Descriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{2, 8}
}

func (x *ApiKeysRequests_GetSpacesKeys) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

type ApiKeysRequests_Set struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the API key to update
	ApiKeyId string `protobuf:"bytes,1,opt,name=apiKeyId,proto3" json:"apiKeyId,omitempty"`
	// API key details to set
	Details    *SettableApiKeyDetails `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
	UpdateMask *field_mask.FieldMask  `protobuf:"bytes,3,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *ApiKeysRequests_Set) Reset() {
	*x = ApiKeysRequests_Set{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apikeys_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiKeysRequests_Set) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiKeysRequests_Set) ProtoMessage() {}

func (x *ApiKeysRequests_Set) ProtoReflect() protoreflect.Message {
	mi := &file_apikeys_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiKeysRequests_Set.ProtoReflect.Descriptor instead.
func (*ApiKeysRequests_Set) Descriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{2, 9}
}

func (x *ApiKeysRequests_Set) GetApiKeyId() string {
	if x != nil {
		return x.ApiKeyId
	}
	return ""
}

func (x *ApiKeysRequests_Set) GetDetails() *SettableApiKeyDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ApiKeysRequests_Set) GetUpdateMask() *field_mask.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type ApiKeysResponses_Delete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ApiKeysResponses_Delete) Reset() {
	*x = ApiKeysResponses_Delete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apikeys_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiKeysResponses_Delete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiKeysResponses_Delete) ProtoMessage() {}

func (x *ApiKeysResponses_Delete) ProtoReflect() protoreflect.Message {
	mi := &file_apikeys_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiKeysResponses_Delete.ProtoReflect.Descriptor instead.
func (*ApiKeysResponses_Delete) Descriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{3, 0}
}

type ApiKeysResponses_GetMulti struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []*ApiKeyDetails `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *ApiKeysResponses_GetMulti) Reset() {
	*x = ApiKeysResponses_GetMulti{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apikeys_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiKeysResponses_GetMulti) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiKeysResponses_GetMulti) ProtoMessage() {}

func (x *ApiKeysResponses_GetMulti) ProtoReflect() protoreflect.Message {
	mi := &file_apikeys_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiKeysResponses_GetMulti.ProtoReflect.Descriptor instead.
func (*ApiKeysResponses_GetMulti) Descriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{3, 1}
}

func (x *ApiKeysResponses_GetMulti) GetResponse() []*ApiKeyDetails {
	if x != nil {
		return x.Response
	}
	return nil
}

type ApiKeysResponses_GetProfileKeys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []string `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *ApiKeysResponses_GetProfileKeys) Reset() {
	*x = ApiKeysResponses_GetProfileKeys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apikeys_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiKeysResponses_GetProfileKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiKeysResponses_GetProfileKeys) ProtoMessage() {}

func (x *ApiKeysResponses_GetProfileKeys) ProtoReflect() protoreflect.Message {
	mi := &file_apikeys_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiKeysResponses_GetProfileKeys.ProtoReflect.Descriptor instead.
func (*ApiKeysResponses_GetProfileKeys) Descriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{3, 2}
}

func (x *ApiKeysResponses_GetProfileKeys) GetResponse() []string {
	if x != nil {
		return x.Response
	}
	return nil
}

type ApiKeysResponses_GetSiteKeys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []string `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *ApiKeysResponses_GetSiteKeys) Reset() {
	*x = ApiKeysResponses_GetSiteKeys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apikeys_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiKeysResponses_GetSiteKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiKeysResponses_GetSiteKeys) ProtoMessage() {}

func (x *ApiKeysResponses_GetSiteKeys) ProtoReflect() protoreflect.Message {
	mi := &file_apikeys_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiKeysResponses_GetSiteKeys.ProtoReflect.Descriptor instead.
func (*ApiKeysResponses_GetSiteKeys) Descriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{3, 3}
}

func (x *ApiKeysResponses_GetSiteKeys) GetResponse() []string {
	if x != nil {
		return x.Response
	}
	return nil
}

type ApiKeysResponses_GetSpacesKeys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []string `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *ApiKeysResponses_GetSpacesKeys) Reset() {
	*x = ApiKeysResponses_GetSpacesKeys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apikeys_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiKeysResponses_GetSpacesKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiKeysResponses_GetSpacesKeys) ProtoMessage() {}

func (x *ApiKeysResponses_GetSpacesKeys) ProtoReflect() protoreflect.Message {
	mi := &file_apikeys_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiKeysResponses_GetSpacesKeys.ProtoReflect.Descriptor instead.
func (*ApiKeysResponses_GetSpacesKeys) Descriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{3, 4}
}

func (x *ApiKeysResponses_GetSpacesKeys) GetResponse() []string {
	if x != nil {
		return x.Response
	}
	return nil
}

var File_apikeys_proto protoreflect.FileDescriptor

var file_apikeys_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x61, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x06, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x1a, 0x0a, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb9, 0x01, 0x0a, 0x0d, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x12, 0x32, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e,
	0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x34, 0x0a, 0x0c, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x22, 0xda, 0x01, 0x0a, 0x16, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x57, 0x69, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70,
	0x69, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x32,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x66, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x44, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x34, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0xdf,
	0x04, 0x0a, 0x0f, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x1a, 0x49, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x35, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0x46, 0x0a,
	0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x35,
	0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x70, 0x69, 0x4b, 0x65, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0x62, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x35, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x68, 0x6f, 0x72,
	0x75, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x1a, 0x24, 0x0a, 0x06, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x1a,
	0x21, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79,
	0x49, 0x64, 0x1a, 0x26, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x12, 0x1a,
	0x0a, 0x08, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x1a, 0x10, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x1a, 0x0d, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x53, 0x69, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x1a, 0x29, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x1a, 0x97, 0x01, 0x0a, 0x03, 0x53, 0x65, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x68,
	0x6f, 0x72, 0x75, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x70, 0x69,
	0x4b, 0x65, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61,
	0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b,
	0x22, 0xe1, 0x01, 0x0a, 0x10, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x73, 0x1a, 0x08, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x1a,
	0x3d, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x12, 0x31, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x2c,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x29, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x53, 0x69, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x2b, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x69, 0x4b, 0x65, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x22, 0x4b, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x70, 0x69,
	0x4b, 0x65, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x32, 0xde,
	0x06, 0x0a, 0x07, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x5e, 0x0a, 0x10, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x28,
	0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x1a, 0x1e, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75,
	0x73, 0x2e, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x57,
	0x69, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x25, 0x2e, 0x63, 0x68,
	0x6f, 0x72, 0x75, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x74, 0x65, 0x4b,
	0x65, 0x79, 0x1a, 0x1e, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x4b,
	0x65, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x57, 0x69, 0x74, 0x68, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x27, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73,
	0x2e, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x4b, 0x65, 0x79,
	0x1a, 0x1e, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x57, 0x69, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x00, 0x12, 0x4b, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x63,
	0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x1a, 0x1f, 0x2e, 0x63,
	0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x00, 0x12,
	0x3b, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x1b, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e,
	0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x1a, 0x15, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x41, 0x70, 0x69,
	0x4b, 0x65, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x08,
	0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x12, 0x20, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75,
	0x73, 0x2e, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x1a, 0x21, 0x2e, 0x63, 0x68, 0x6f,
	0x72, 0x75, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x22, 0x00, 0x12,
	0x63, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79,
	0x73, 0x12, 0x26, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x4b, 0x65,
	0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x1a, 0x27, 0x2e, 0x63, 0x68, 0x6f, 0x72,
	0x75, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65,
	0x79, 0x73, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x69, 0x74, 0x65, 0x4b,
	0x65, 0x79, 0x73, 0x12, 0x23, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x41, 0x70, 0x69,
	0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x69, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x1a, 0x24, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75,
	0x73, 0x2e, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x22, 0x00,
	0x12, 0x60, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x4b, 0x65, 0x79,
	0x73, 0x12, 0x25, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x4b, 0x65,
	0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x1a, 0x26, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75,
	0x73, 0x2e, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x4b, 0x65, 0x79, 0x73,
	0x22, 0x00, 0x12, 0x3b, 0x0a, 0x03, 0x53, 0x65, 0x74, 0x12, 0x1b, 0x2e, 0x63, 0x68, 0x6f, 0x72,
	0x75, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x1a, 0x15, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e,
	0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x00, 0x42,
	0x0c, 0x5a, 0x0a, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_apikeys_proto_rawDescOnce sync.Once
	file_apikeys_proto_rawDescData = file_apikeys_proto_rawDesc
)

func file_apikeys_proto_rawDescGZIP() []byte {
	file_apikeys_proto_rawDescOnce.Do(func() {
		file_apikeys_proto_rawDescData = protoimpl.X.CompressGZIP(file_apikeys_proto_rawDescData)
	})
	return file_apikeys_proto_rawDescData
}

var file_apikeys_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_apikeys_proto_goTypes = []interface{}{
	(*ApiKeyDetails)(nil),                    // 0: chorus.ApiKeyDetails
	(*ApiKeyDetailsWithToken)(nil),           // 1: chorus.ApiKeyDetailsWithToken
	(*ApiKeysRequests)(nil),                  // 2: chorus.ApiKeysRequests
	(*ApiKeysResponses)(nil),                 // 3: chorus.ApiKeysResponses
	(*CreateApiKeyDetails)(nil),              // 4: chorus.CreateApiKeyDetails
	(*SettableApiKeyDetails)(nil),            // 5: chorus.SettableApiKeyDetails
	(*ApiKeysRequests_CreateProfileKey)(nil), // 6: chorus.ApiKeysRequests.CreateProfileKey
	(*ApiKeysRequests_CreateSiteKey)(nil),    // 7: chorus.ApiKeysRequests.CreateSiteKey
	(*ApiKeysRequests_CreateSpacesKey)(nil),  // 8: chorus.ApiKeysRequests.CreateSpacesKey
	(*ApiKeysRequests_Delete)(nil),           // 9: chorus.ApiKeysRequests.Delete
	(*ApiKeysRequests_Get)(nil),              // 10: chorus.ApiKeysRequests.Get
	(*ApiKeysRequests_GetMulti)(nil),         // 11: chorus.ApiKeysRequests.GetMulti
	(*ApiKeysRequests_GetProfileKeys)(nil),   // 12: chorus.ApiKeysRequests.GetProfileKeys
	(*ApiKeysRequests_GetSiteKeys)(nil),      // 13: chorus.ApiKeysRequests.GetSiteKeys
	(*ApiKeysRequests_GetSpacesKeys)(nil),    // 14: chorus.ApiKeysRequests.GetSpacesKeys
	(*ApiKeysRequests_Set)(nil),              // 15: chorus.ApiKeysRequests.Set
	(*ApiKeysResponses_Delete)(nil),          // 16: chorus.ApiKeysResponses.Delete
	(*ApiKeysResponses_GetMulti)(nil),        // 17: chorus.ApiKeysResponses.GetMulti
	(*ApiKeysResponses_GetProfileKeys)(nil),  // 18: chorus.ApiKeysResponses.GetProfileKeys
	(*ApiKeysResponses_GetSiteKeys)(nil),     // 19: chorus.ApiKeysResponses.GetSiteKeys
	(*ApiKeysResponses_GetSpacesKeys)(nil),   // 20: chorus.ApiKeysResponses.GetSpacesKeys
	(*DateTime)(nil),                         // 21: chorus.DateTime
	(*wrappers.StringValue)(nil),             // 22: google.protobuf.StringValue
	(*field_mask.FieldMask)(nil),             // 23: google.protobuf.FieldMask
}
var file_apikeys_proto_depIdxs = []int32{
	21, // 0: chorus.ApiKeyDetails.createdDate:type_name -> chorus.DateTime
	21, // 1: chorus.ApiKeyDetails.modifiedDate:type_name -> chorus.DateTime
	21, // 2: chorus.ApiKeyDetailsWithToken.createdDate:type_name -> chorus.DateTime
	21, // 3: chorus.ApiKeyDetailsWithToken.modifiedDate:type_name -> chorus.DateTime
	22, // 4: chorus.SettableApiKeyDetails.label:type_name -> google.protobuf.StringValue
	4,  // 5: chorus.ApiKeysRequests.CreateProfileKey.details:type_name -> chorus.CreateApiKeyDetails
	4,  // 6: chorus.ApiKeysRequests.CreateSiteKey.details:type_name -> chorus.CreateApiKeyDetails
	4,  // 7: chorus.ApiKeysRequests.CreateSpacesKey.details:type_name -> chorus.CreateApiKeyDetails
	5,  // 8: chorus.ApiKeysRequests.Set.details:type_name -> chorus.SettableApiKeyDetails
	23, // 9: chorus.ApiKeysRequests.Set.update_mask:type_name -> google.protobuf.FieldMask
	0,  // 10: chorus.ApiKeysResponses.GetMulti.response:type_name -> chorus.ApiKeyDetails
	6,  // 11: chorus.ApiKeys.CreateProfileKey:input_type -> chorus.ApiKeysRequests.CreateProfileKey
	7,  // 12: chorus.ApiKeys.CreateSiteKey:input_type -> chorus.ApiKeysRequests.CreateSiteKey
	8,  // 13: chorus.ApiKeys.CreateSpacesKey:input_type -> chorus.ApiKeysRequests.CreateSpacesKey
	9,  // 14: chorus.ApiKeys.Delete:input_type -> chorus.ApiKeysRequests.Delete
	10, // 15: chorus.ApiKeys.Get:input_type -> chorus.ApiKeysRequests.Get
	11, // 16: chorus.ApiKeys.GetMulti:input_type -> chorus.ApiKeysRequests.GetMulti
	12, // 17: chorus.ApiKeys.GetProfileKeys:input_type -> chorus.ApiKeysRequests.GetProfileKeys
	13, // 18: chorus.ApiKeys.GetSiteKeys:input_type -> chorus.ApiKeysRequests.GetSiteKeys
	14, // 19: chorus.ApiKeys.GetSpacesKeys:input_type -> chorus.ApiKeysRequests.GetSpacesKeys
	15, // 20: chorus.ApiKeys.Set:input_type -> chorus.ApiKeysRequests.Set
	1,  // 21: chorus.ApiKeys.CreateProfileKey:output_type -> chorus.ApiKeyDetailsWithToken
	1,  // 22: chorus.ApiKeys.CreateSiteKey:output_type -> chorus.ApiKeyDetailsWithToken
	1,  // 23: chorus.ApiKeys.CreateSpacesKey:output_type -> chorus.ApiKeyDetailsWithToken
	16, // 24: chorus.ApiKeys.Delete:output_type -> chorus.ApiKeysResponses.Delete
	0,  // 25: chorus.ApiKeys.Get:output_type -> chorus.ApiKeyDetails
	17, // 26: chorus.ApiKeys.GetMulti:output_type -> chorus.ApiKeysResponses.GetMulti
	18, // 27: chorus.ApiKeys.GetProfileKeys:output_type -> chorus.ApiKeysResponses.GetProfileKeys
	19, // 28: chorus.ApiKeys.GetSiteKeys:output_type -> chorus.ApiKeysResponses.GetSiteKeys
	20, // 29: chorus.ApiKeys.GetSpacesKeys:output_type -> chorus.ApiKeysResponses.GetSpacesKeys
	0,  // 30: chorus.ApiKeys.Set:output_type -> chorus.ApiKeyDetails
	21, // [21:31] is the sub-list for method output_type
	11, // [11:21] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_apikeys_proto_init() }
func file_apikeys_proto_init() {
	if File_apikeys_proto != nil {
		return
	}
	file_core_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_apikeys_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiKeyDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apikeys_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiKeyDetailsWithToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apikeys_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiKeysRequests); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apikeys_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiKeysResponses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apikeys_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateApiKeyDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apikeys_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettableApiKeyDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apikeys_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiKeysRequests_CreateProfileKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apikeys_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiKeysRequests_CreateSiteKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apikeys_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiKeysRequests_CreateSpacesKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apikeys_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiKeysRequests_Delete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apikeys_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiKeysRequests_Get); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apikeys_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiKeysRequests_GetMulti); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apikeys_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiKeysRequests_GetProfileKeys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apikeys_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiKeysRequests_GetSiteKeys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apikeys_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiKeysRequests_GetSpacesKeys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apikeys_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiKeysRequests_Set); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apikeys_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiKeysResponses_Delete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apikeys_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiKeysResponses_GetMulti); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apikeys_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiKeysResponses_GetProfileKeys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apikeys_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiKeysResponses_GetSiteKeys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apikeys_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiKeysResponses_GetSpacesKeys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_apikeys_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_apikeys_proto_goTypes,
		DependencyIndexes: file_apikeys_proto_depIdxs,
		MessageInfos:      file_apikeys_proto_msgTypes,
	}.Build()
	File_apikeys_proto = out.File
	file_apikeys_proto_rawDesc = nil
	file_apikeys_proto_goTypes = nil
	file_apikeys_proto_depIdxs = nil
}
