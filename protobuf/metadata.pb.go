// This is a protobuf specifications for the Metadata module of the Third Light gRPC API for Chorus.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.6.1
// source: metadata.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents the vocab mode
type Vocab_Mode int32

const (
	// Indicates that vocab is disabled.
	Vocab_DISABLED Vocab_Mode = 0
	// Indicates that vocab should be inherited.
	Vocab_INHERIT Vocab_Mode = 1
	// Indicates that vocab should replace any inherited vocab.
	Vocab_REPLACE Vocab_Mode = 3
)

// Enum value maps for Vocab_Mode.
var (
	Vocab_Mode_name = map[int32]string{
		0: "DISABLED",
		1: "INHERIT",
		3: "REPLACE",
	}
	Vocab_Mode_value = map[string]int32{
		"DISABLED": 0,
		"INHERIT":  1,
		"REPLACE":  3,
	}
)

func (x Vocab_Mode) Enum() *Vocab_Mode {
	p := new(Vocab_Mode)
	*p = x
	return p
}

func (x Vocab_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Vocab_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_metadata_proto_enumTypes[0].Descriptor()
}

func (Vocab_Mode) Type() protoreflect.EnumType {
	return &file_metadata_proto_enumTypes[0]
}

func (x Vocab_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Vocab_Mode.Descriptor instead.
func (Vocab_Mode) EnumDescriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{7, 0}
}

// Represents the details of a metadata field.
type Field struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the data type of the metadata field
	DataType string `protobuf:"bytes,3,opt,name=dataType,proto3" json:"dataType,omitempty"`
	// A description of the field
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// the display type of the field
	DisplayType string `protobuf:"bytes,4,opt,name=displayType,proto3" json:"displayType,omitempty"`
	// whether the field is read only
	ReadOnly bool `protobuf:"varint,5,opt,name=readOnly,proto3" json:"readOnly,omitempty"`
	// the search settings for the metadata field
	SearchSettings *FieldSearchSettings `protobuf:"bytes,6,opt,name=searchSettings,proto3" json:"searchSettings,omitempty"`
	// types of file supported by this metadata field
	SupportedFileTypes []string `protobuf:"bytes,7,rep,name=supportedFileTypes,proto3" json:"supportedFileTypes,omitempty"`
	// The tag name
	TagName string `protobuf:"bytes,1,opt,name=tagName,proto3" json:"tagName,omitempty"`
}

func (x *Field) Reset() {
	*x = Field{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Field) ProtoMessage() {}

func (x *Field) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Field.ProtoReflect.Descriptor instead.
func (*Field) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{0}
}

func (x *Field) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *Field) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Field) GetDisplayType() string {
	if x != nil {
		return x.DisplayType
	}
	return ""
}

func (x *Field) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

func (x *Field) GetSearchSettings() *FieldSearchSettings {
	if x != nil {
		return x.SearchSettings
	}
	return nil
}

func (x *Field) GetSupportedFileTypes() []string {
	if x != nil {
		return x.SupportedFileTypes
	}
	return nil
}

func (x *Field) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

// Represents the search details of a metadata field.
type FieldSearchSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// whether the field is available in advanced search
	AdvancedSearch bool `protobuf:"varint,2,opt,name=advancedSearch,proto3" json:"advancedSearch,omitempty"`
	// whether the field is available in general search
	GeneralSearch bool `protobuf:"varint,1,opt,name=generalSearch,proto3" json:"generalSearch,omitempty"`
}

func (x *FieldSearchSettings) Reset() {
	*x = FieldSearchSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldSearchSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldSearchSettings) ProtoMessage() {}

func (x *FieldSearchSettings) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldSearchSettings.ProtoReflect.Descriptor instead.
func (*FieldSearchSettings) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{1}
}

func (x *FieldSearchSettings) GetAdvancedSearch() bool {
	if x != nil {
		return x.AdvancedSearch
	}
	return false
}

func (x *FieldSearchSettings) GetGeneralSearch() bool {
	if x != nil {
		return x.GeneralSearch
	}
	return false
}

type MetadataRequests struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MetadataRequests) Reset() {
	*x = MetadataRequests{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequests) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequests) ProtoMessage() {}

func (x *MetadataRequests) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequests.ProtoReflect.Descriptor instead.
func (*MetadataRequests) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{2}
}

type MetadataResponses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MetadataResponses) Reset() {
	*x = MetadataResponses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataResponses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataResponses) ProtoMessage() {}

func (x *MetadataResponses) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataResponses.ProtoReflect.Descriptor instead.
func (*MetadataResponses) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{3}
}

// Represents the value of a metadata field.
type MetadataValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Values:
	//	*MetadataValue_Numeric
	//	*MetadataValue_Text
	Values isMetadataValue_Values `protobuf_oneof:"values"`
}

func (x *MetadataValue) Reset() {
	*x = MetadataValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataValue) ProtoMessage() {}

func (x *MetadataValue) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataValue.ProtoReflect.Descriptor instead.
func (*MetadataValue) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{4}
}

func (m *MetadataValue) GetValues() isMetadataValue_Values {
	if m != nil {
		return m.Values
	}
	return nil
}

func (x *MetadataValue) GetNumeric() *MetadataValue_NumericType {
	if x, ok := x.GetValues().(*MetadataValue_Numeric); ok {
		return x.Numeric
	}
	return nil
}

func (x *MetadataValue) GetText() *MetadataValue_TextType {
	if x, ok := x.GetValues().(*MetadataValue_Text); ok {
		return x.Text
	}
	return nil
}

type isMetadataValue_Values interface {
	isMetadataValue_Values()
}

type MetadataValue_Numeric struct {
	// Values of metadata if the type of the metadata if this is a numeric type of field.
	Numeric *MetadataValue_NumericType `protobuf:"bytes,2,opt,name=numeric,proto3,oneof"`
}

type MetadataValue_Text struct {
	// Values of metadata if the type of the metadata if this is a string type of field.
	Text *MetadataValue_TextType `protobuf:"bytes,1,opt,name=text,proto3,oneof"`
}

func (*MetadataValue_Numeric) isMetadataValue_Values() {}

func (*MetadataValue_Text) isMetadataValue_Values() {}

// A map matching a metadata value to its values.
type MetadataValueMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values map[string]*MetadataValue `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MetadataValueMap) Reset() {
	*x = MetadataValueMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataValueMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataValueMap) ProtoMessage() {}

func (x *MetadataValueMap) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataValueMap.ProtoReflect.Descriptor instead.
func (*MetadataValueMap) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{5}
}

func (x *MetadataValueMap) GetValues() map[string]*MetadataValue {
	if x != nil {
		return x.Values
	}
	return nil
}

// Represents the details of a metadata panel.
type Panel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A description of the panel
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// The id of the panel
	PanelId string `protobuf:"bytes,1,opt,name=panelId,proto3" json:"panelId,omitempty"`
	// names of the tags in this metadata panel
	TagNames []string `protobuf:"bytes,3,rep,name=tagNames,proto3" json:"tagNames,omitempty"`
}

func (x *Panel) Reset() {
	*x = Panel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Panel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Panel) ProtoMessage() {}

func (x *Panel) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Panel.ProtoReflect.Descriptor instead.
func (*Panel) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{6}
}

func (x *Panel) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Panel) GetPanelId() string {
	if x != nil {
		return x.PanelId
	}
	return ""
}

func (x *Panel) GetTagNames() []string {
	if x != nil {
		return x.TagNames
	}
	return nil
}

// Represents the details of a metadata panel.
type Vocab struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the mode of the vocab
	Mode Vocab_Mode `protobuf:"varint,2,opt,name=mode,proto3,enum=chorus.Vocab_Mode" json:"mode,omitempty"`
	// The name of the tag
	TagName string `protobuf:"bytes,1,opt,name=tagName,proto3" json:"tagName,omitempty"`
	// names of the values in the vocab list
	Values []string `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *Vocab) Reset() {
	*x = Vocab{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vocab) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vocab) ProtoMessage() {}

func (x *Vocab) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vocab.ProtoReflect.Descriptor instead.
func (*Vocab) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{7}
}

func (x *Vocab) GetMode() Vocab_Mode {
	if x != nil {
		return x.Mode
	}
	return Vocab_DISABLED
}

func (x *Vocab) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

func (x *Vocab) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type MetadataRequests_DeleteMetadataValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the value details to delete
	Details *MetadataValue `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
	// The file or folder to delete the metadata for
	ItemId string `protobuf:"bytes,1,opt,name=itemId,proto3" json:"itemId,omitempty"`
	// The name of the tag for which to delete the metadata
	TagName string `protobuf:"bytes,2,opt,name=tagName,proto3" json:"tagName,omitempty"`
}

func (x *MetadataRequests_DeleteMetadataValues) Reset() {
	*x = MetadataRequests_DeleteMetadataValues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequests_DeleteMetadataValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequests_DeleteMetadataValues) ProtoMessage() {}

func (x *MetadataRequests_DeleteMetadataValues) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequests_DeleteMetadataValues.ProtoReflect.Descriptor instead.
func (*MetadataRequests_DeleteMetadataValues) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{2, 0}
}

func (x *MetadataRequests_DeleteMetadataValues) GetDetails() *MetadataValue {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *MetadataRequests_DeleteMetadataValues) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *MetadataRequests_DeleteMetadataValues) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

type MetadataRequests_GetField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the field of which to get the details
	TagName string `protobuf:"bytes,1,opt,name=tagName,proto3" json:"tagName,omitempty"`
}

func (x *MetadataRequests_GetField) Reset() {
	*x = MetadataRequests_GetField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequests_GetField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequests_GetField) ProtoMessage() {}

func (x *MetadataRequests_GetField) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequests_GetField.ProtoReflect.Descriptor instead.
func (*MetadataRequests_GetField) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{2, 1}
}

func (x *MetadataRequests_GetField) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

type MetadataRequests_GetFieldMulti struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the field of which to get the details
	TagNames []string `protobuf:"bytes,1,rep,name=tagNames,proto3" json:"tagNames,omitempty"`
}

func (x *MetadataRequests_GetFieldMulti) Reset() {
	*x = MetadataRequests_GetFieldMulti{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequests_GetFieldMulti) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequests_GetFieldMulti) ProtoMessage() {}

func (x *MetadataRequests_GetFieldMulti) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequests_GetFieldMulti.ProtoReflect.Descriptor instead.
func (*MetadataRequests_GetFieldMulti) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{2, 2}
}

func (x *MetadataRequests_GetFieldMulti) GetTagNames() []string {
	if x != nil {
		return x.TagNames
	}
	return nil
}

type MetadataRequests_GetMetadataFields struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The item to get metadata fields for
	ItemId string `protobuf:"bytes,1,opt,name=itemId,proto3" json:"itemId,omitempty"`
}

func (x *MetadataRequests_GetMetadataFields) Reset() {
	*x = MetadataRequests_GetMetadataFields{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequests_GetMetadataFields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequests_GetMetadataFields) ProtoMessage() {}

func (x *MetadataRequests_GetMetadataFields) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequests_GetMetadataFields.ProtoReflect.Descriptor instead.
func (*MetadataRequests_GetMetadataFields) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{2, 3}
}

func (x *MetadataRequests_GetMetadataFields) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

type MetadataRequests_GetMetadataPanels struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The item to get metadata panel IDs for
	ItemId string `protobuf:"bytes,1,opt,name=itemId,proto3" json:"itemId,omitempty"`
}

func (x *MetadataRequests_GetMetadataPanels) Reset() {
	*x = MetadataRequests_GetMetadataPanels{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequests_GetMetadataPanels) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequests_GetMetadataPanels) ProtoMessage() {}

func (x *MetadataRequests_GetMetadataPanels) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequests_GetMetadataPanels.ProtoReflect.Descriptor instead.
func (*MetadataRequests_GetMetadataPanels) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{2, 4}
}

func (x *MetadataRequests_GetMetadataPanels) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

type MetadataRequests_GetMetadataValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The file or folder to get metadata for
	ItemId string `protobuf:"bytes,1,opt,name=itemId,proto3" json:"itemId,omitempty"`
	// The name of the tag for which to retrieve the values
	TagName string `protobuf:"bytes,2,opt,name=tagName,proto3" json:"tagName,omitempty"`
}

func (x *MetadataRequests_GetMetadataValues) Reset() {
	*x = MetadataRequests_GetMetadataValues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequests_GetMetadataValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequests_GetMetadataValues) ProtoMessage() {}

func (x *MetadataRequests_GetMetadataValues) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequests_GetMetadataValues.ProtoReflect.Descriptor instead.
func (*MetadataRequests_GetMetadataValues) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{2, 5}
}

func (x *MetadataRequests_GetMetadataValues) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *MetadataRequests_GetMetadataValues) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

type MetadataRequests_GetPanel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the panel for which to get the details
	PanelId string `protobuf:"bytes,1,opt,name=panelId,proto3" json:"panelId,omitempty"`
}

func (x *MetadataRequests_GetPanel) Reset() {
	*x = MetadataRequests_GetPanel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequests_GetPanel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequests_GetPanel) ProtoMessage() {}

func (x *MetadataRequests_GetPanel) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequests_GetPanel.ProtoReflect.Descriptor instead.
func (*MetadataRequests_GetPanel) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{2, 6}
}

func (x *MetadataRequests_GetPanel) GetPanelId() string {
	if x != nil {
		return x.PanelId
	}
	return ""
}

type MetadataRequests_GetPanelMulti struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the panel for which to get the details
	PanelIds []string `protobuf:"bytes,1,rep,name=panelIds,proto3" json:"panelIds,omitempty"`
}

func (x *MetadataRequests_GetPanelMulti) Reset() {
	*x = MetadataRequests_GetPanelMulti{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequests_GetPanelMulti) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequests_GetPanelMulti) ProtoMessage() {}

func (x *MetadataRequests_GetPanelMulti) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequests_GetPanelMulti.ProtoReflect.Descriptor instead.
func (*MetadataRequests_GetPanelMulti) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{2, 7}
}

func (x *MetadataRequests_GetPanelMulti) GetPanelIds() []string {
	if x != nil {
		return x.PanelIds
	}
	return nil
}

type MetadataRequests_GetProfileVocab struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the tag for which to retrieve the vocab
	TagName string `protobuf:"bytes,2,opt,name=tagName,proto3" json:"tagName,omitempty"`
}

func (x *MetadataRequests_GetProfileVocab) Reset() {
	*x = MetadataRequests_GetProfileVocab{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequests_GetProfileVocab) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequests_GetProfileVocab) ProtoMessage() {}

func (x *MetadataRequests_GetProfileVocab) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequests_GetProfileVocab.ProtoReflect.Descriptor instead.
func (*MetadataRequests_GetProfileVocab) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{2, 8}
}

func (x *MetadataRequests_GetProfileVocab) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

type MetadataRequests_GetSiteVocab struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the tag for which to retrieve the vocab
	TagName string `protobuf:"bytes,2,opt,name=tagName,proto3" json:"tagName,omitempty"`
}

func (x *MetadataRequests_GetSiteVocab) Reset() {
	*x = MetadataRequests_GetSiteVocab{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequests_GetSiteVocab) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequests_GetSiteVocab) ProtoMessage() {}

func (x *MetadataRequests_GetSiteVocab) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequests_GetSiteVocab.ProtoReflect.Descriptor instead.
func (*MetadataRequests_GetSiteVocab) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{2, 9}
}

func (x *MetadataRequests_GetSiteVocab) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

type MetadataRequests_GetSpaceVocab struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The space for which to get the tag vocab
	SpaceId string `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	// The name of the tag for which to retrieve the vocab
	TagName string `protobuf:"bytes,2,opt,name=tagName,proto3" json:"tagName,omitempty"`
}

func (x *MetadataRequests_GetSpaceVocab) Reset() {
	*x = MetadataRequests_GetSpaceVocab{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequests_GetSpaceVocab) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequests_GetSpaceVocab) ProtoMessage() {}

func (x *MetadataRequests_GetSpaceVocab) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequests_GetSpaceVocab.ProtoReflect.Descriptor instead.
func (*MetadataRequests_GetSpaceVocab) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{2, 10}
}

func (x *MetadataRequests_GetSpaceVocab) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *MetadataRequests_GetSpaceVocab) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

type MetadataRequests_ReplaceMetadataValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the value details to set
	Details *MetadataValue `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
	// The file or folder to replace the metadata for
	ItemId string `protobuf:"bytes,1,opt,name=itemId,proto3" json:"itemId,omitempty"`
	// The name of the tag for which to update the metadata
	TagName string `protobuf:"bytes,2,opt,name=tagName,proto3" json:"tagName,omitempty"`
}

func (x *MetadataRequests_ReplaceMetadataValues) Reset() {
	*x = MetadataRequests_ReplaceMetadataValues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequests_ReplaceMetadataValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequests_ReplaceMetadataValues) ProtoMessage() {}

func (x *MetadataRequests_ReplaceMetadataValues) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequests_ReplaceMetadataValues.ProtoReflect.Descriptor instead.
func (*MetadataRequests_ReplaceMetadataValues) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{2, 11}
}

func (x *MetadataRequests_ReplaceMetadataValues) GetDetails() *MetadataValue {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *MetadataRequests_ReplaceMetadataValues) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *MetadataRequests_ReplaceMetadataValues) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

type MetadataRequests_ReplaceProfileVocab struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the vocab details to set
	Details *Vocab `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
	// The name of the tag for which to replace the vocab
	TagName string `protobuf:"bytes,2,opt,name=tagName,proto3" json:"tagName,omitempty"`
}

func (x *MetadataRequests_ReplaceProfileVocab) Reset() {
	*x = MetadataRequests_ReplaceProfileVocab{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequests_ReplaceProfileVocab) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequests_ReplaceProfileVocab) ProtoMessage() {}

func (x *MetadataRequests_ReplaceProfileVocab) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequests_ReplaceProfileVocab.ProtoReflect.Descriptor instead.
func (*MetadataRequests_ReplaceProfileVocab) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{2, 12}
}

func (x *MetadataRequests_ReplaceProfileVocab) GetDetails() *Vocab {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *MetadataRequests_ReplaceProfileVocab) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

type MetadataRequests_ReplaceSiteVocab struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the vocab details to set
	Details *Vocab `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
	// The name of the tag for which to replace the vocab
	TagName string `protobuf:"bytes,2,opt,name=tagName,proto3" json:"tagName,omitempty"`
}

func (x *MetadataRequests_ReplaceSiteVocab) Reset() {
	*x = MetadataRequests_ReplaceSiteVocab{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequests_ReplaceSiteVocab) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequests_ReplaceSiteVocab) ProtoMessage() {}

func (x *MetadataRequests_ReplaceSiteVocab) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequests_ReplaceSiteVocab.ProtoReflect.Descriptor instead.
func (*MetadataRequests_ReplaceSiteVocab) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{2, 13}
}

func (x *MetadataRequests_ReplaceSiteVocab) GetDetails() *Vocab {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *MetadataRequests_ReplaceSiteVocab) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

type MetadataRequests_ReplaceSpaceVocab struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the vocab details to set
	Details *Vocab `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
	// The space for which to replace the tag vocab
	SpaceId string `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	// The name of the tag for which to replace the vocab
	TagName string `protobuf:"bytes,2,opt,name=tagName,proto3" json:"tagName,omitempty"`
}

func (x *MetadataRequests_ReplaceSpaceVocab) Reset() {
	*x = MetadataRequests_ReplaceSpaceVocab{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequests_ReplaceSpaceVocab) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequests_ReplaceSpaceVocab) ProtoMessage() {}

func (x *MetadataRequests_ReplaceSpaceVocab) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequests_ReplaceSpaceVocab.ProtoReflect.Descriptor instead.
func (*MetadataRequests_ReplaceSpaceVocab) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{2, 14}
}

func (x *MetadataRequests_ReplaceSpaceVocab) GetDetails() *Vocab {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *MetadataRequests_ReplaceSpaceVocab) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *MetadataRequests_ReplaceSpaceVocab) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

type MetadataRequests_UpdateMetadataValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the value details to set
	Details *MetadataValue `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
	// The file or folder to update the metadata for
	ItemId string `protobuf:"bytes,1,opt,name=itemId,proto3" json:"itemId,omitempty"`
	// The name of the tag for which to update the metadata
	TagName string `protobuf:"bytes,2,opt,name=tagName,proto3" json:"tagName,omitempty"`
}

func (x *MetadataRequests_UpdateMetadataValues) Reset() {
	*x = MetadataRequests_UpdateMetadataValues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequests_UpdateMetadataValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequests_UpdateMetadataValues) ProtoMessage() {}

func (x *MetadataRequests_UpdateMetadataValues) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequests_UpdateMetadataValues.ProtoReflect.Descriptor instead.
func (*MetadataRequests_UpdateMetadataValues) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{2, 15}
}

func (x *MetadataRequests_UpdateMetadataValues) GetDetails() *MetadataValue {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *MetadataRequests_UpdateMetadataValues) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *MetadataRequests_UpdateMetadataValues) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

type MetadataRequests_UpdateProfileVocab struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the vocab details to set
	Details *Vocab `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
	// The name of the tag for which to replace the vocab
	TagName string `protobuf:"bytes,2,opt,name=tagName,proto3" json:"tagName,omitempty"`
}

func (x *MetadataRequests_UpdateProfileVocab) Reset() {
	*x = MetadataRequests_UpdateProfileVocab{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequests_UpdateProfileVocab) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequests_UpdateProfileVocab) ProtoMessage() {}

func (x *MetadataRequests_UpdateProfileVocab) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequests_UpdateProfileVocab.ProtoReflect.Descriptor instead.
func (*MetadataRequests_UpdateProfileVocab) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{2, 16}
}

func (x *MetadataRequests_UpdateProfileVocab) GetDetails() *Vocab {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *MetadataRequests_UpdateProfileVocab) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

type MetadataRequests_UpdateSiteVocab struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the vocab details to set
	Details *Vocab `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
	// The name of the tag for which to replace the vocab
	TagName string `protobuf:"bytes,2,opt,name=tagName,proto3" json:"tagName,omitempty"`
}

func (x *MetadataRequests_UpdateSiteVocab) Reset() {
	*x = MetadataRequests_UpdateSiteVocab{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequests_UpdateSiteVocab) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequests_UpdateSiteVocab) ProtoMessage() {}

func (x *MetadataRequests_UpdateSiteVocab) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequests_UpdateSiteVocab.ProtoReflect.Descriptor instead.
func (*MetadataRequests_UpdateSiteVocab) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{2, 17}
}

func (x *MetadataRequests_UpdateSiteVocab) GetDetails() *Vocab {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *MetadataRequests_UpdateSiteVocab) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

type MetadataRequests_UpdateSpaceVocab struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the vocab details to set
	Details *Vocab `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
	// The space for which to update the tag vocab
	SpaceId string `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	// The name of the tag for which to replace the vocab
	TagName string `protobuf:"bytes,2,opt,name=tagName,proto3" json:"tagName,omitempty"`
}

func (x *MetadataRequests_UpdateSpaceVocab) Reset() {
	*x = MetadataRequests_UpdateSpaceVocab{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequests_UpdateSpaceVocab) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequests_UpdateSpaceVocab) ProtoMessage() {}

func (x *MetadataRequests_UpdateSpaceVocab) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequests_UpdateSpaceVocab.ProtoReflect.Descriptor instead.
func (*MetadataRequests_UpdateSpaceVocab) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{2, 18}
}

func (x *MetadataRequests_UpdateSpaceVocab) GetDetails() *Vocab {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *MetadataRequests_UpdateSpaceVocab) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *MetadataRequests_UpdateSpaceVocab) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

type MetadataResponses_GetFieldMulti struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []*Field `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *MetadataResponses_GetFieldMulti) Reset() {
	*x = MetadataResponses_GetFieldMulti{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataResponses_GetFieldMulti) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataResponses_GetFieldMulti) ProtoMessage() {}

func (x *MetadataResponses_GetFieldMulti) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataResponses_GetFieldMulti.ProtoReflect.Descriptor instead.
func (*MetadataResponses_GetFieldMulti) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{3, 0}
}

func (x *MetadataResponses_GetFieldMulti) GetResponse() []*Field {
	if x != nil {
		return x.Response
	}
	return nil
}

type MetadataResponses_GetMetadataFields struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []string `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *MetadataResponses_GetMetadataFields) Reset() {
	*x = MetadataResponses_GetMetadataFields{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataResponses_GetMetadataFields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataResponses_GetMetadataFields) ProtoMessage() {}

func (x *MetadataResponses_GetMetadataFields) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataResponses_GetMetadataFields.ProtoReflect.Descriptor instead.
func (*MetadataResponses_GetMetadataFields) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{3, 1}
}

func (x *MetadataResponses_GetMetadataFields) GetResponse() []string {
	if x != nil {
		return x.Response
	}
	return nil
}

type MetadataResponses_GetMetadataPanels struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []string `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *MetadataResponses_GetMetadataPanels) Reset() {
	*x = MetadataResponses_GetMetadataPanels{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataResponses_GetMetadataPanels) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataResponses_GetMetadataPanels) ProtoMessage() {}

func (x *MetadataResponses_GetMetadataPanels) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataResponses_GetMetadataPanels.ProtoReflect.Descriptor instead.
func (*MetadataResponses_GetMetadataPanels) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{3, 2}
}

func (x *MetadataResponses_GetMetadataPanels) GetResponse() []string {
	if x != nil {
		return x.Response
	}
	return nil
}

type MetadataResponses_GetPanelMulti struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []*Panel `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *MetadataResponses_GetPanelMulti) Reset() {
	*x = MetadataResponses_GetPanelMulti{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataResponses_GetPanelMulti) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataResponses_GetPanelMulti) ProtoMessage() {}

func (x *MetadataResponses_GetPanelMulti) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataResponses_GetPanelMulti.ProtoReflect.Descriptor instead.
func (*MetadataResponses_GetPanelMulti) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{3, 3}
}

func (x *MetadataResponses_GetPanelMulti) GetResponse() []*Panel {
	if x != nil {
		return x.Response
	}
	return nil
}

type MetadataValue_NumericType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []int64 `protobuf:"varint,1,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *MetadataValue_NumericType) Reset() {
	*x = MetadataValue_NumericType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataValue_NumericType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataValue_NumericType) ProtoMessage() {}

func (x *MetadataValue_NumericType) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataValue_NumericType.ProtoReflect.Descriptor instead.
func (*MetadataValue_NumericType) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{4, 0}
}

func (x *MetadataValue_NumericType) GetValues() []int64 {
	if x != nil {
		return x.Values
	}
	return nil
}

type MetadataValue_TextType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *MetadataValue_TextType) Reset() {
	*x = MetadataValue_TextType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataValue_TextType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataValue_TextType) ProtoMessage() {}

func (x *MetadataValue_TextType) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataValue_TextType.ProtoReflect.Descriptor instead.
func (*MetadataValue_TextType) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{4, 1}
}

func (x *MetadataValue_TextType) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

var File_metadata_proto protoreflect.FileDescriptor

var file_metadata_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x06, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x22, 0x92, 0x02, 0x0a, 0x05, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x43,
	0x0a, 0x0e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x0e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x12, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x63, 0x0a,
	0x13, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x61, 0x64,
	0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x24, 0x0a, 0x0d,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x22, 0xaa, 0x0b, 0x0a, 0x10, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x1a, 0x79, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12,
	0x2f, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61,
	0x6d, 0x65, 0x1a, 0x24, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x2b, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x67,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x67,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x1a, 0x2b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x1a, 0x2b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x1a,
	0x45, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x24, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x50, 0x61, 0x6e,
	0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x1a, 0x2b, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x73, 0x1a, 0x2b, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x28, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53, 0x69, 0x74,
	0x65, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65,
	0x1a, 0x43, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x56, 0x6f, 0x63, 0x61,
	0x62, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74,
	0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61,
	0x67, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x7a, 0x0a, 0x15, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x2f,
	0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d,
	0x65, 0x1a, 0x58, 0x0a, 0x13, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x12, 0x27, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x68, 0x6f, 0x72,
	0x75, 0x73, 0x2e, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x55, 0x0a, 0x10, 0x52,
	0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x53, 0x69, 0x74, 0x65, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x12,
	0x27, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x52,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61,
	0x6d, 0x65, 0x1a, 0x70, 0x0a, 0x11, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x12, 0x27, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75,
	0x73, 0x2e, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61,
	0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67,
	0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x79, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x1a,
	0x57, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x56, 0x6f, 0x63, 0x61, 0x62, 0x12, 0x27, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e,
	0x56, 0x6f, 0x63, 0x61, 0x62, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x54, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x69, 0x74, 0x65, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x12, 0x27, 0x0a, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63,
	0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x52, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x6f,
	0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x56, 0x6f, 0x63,
	0x61, 0x62, 0x12, 0x27, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x63,
	0x61, 0x62, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0xed, 0x01, 0x0a, 0x11, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x73, 0x1a, 0x3a, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x12, 0x29, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75,
	0x73, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x1a, 0x2f, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x1a, 0x2f, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x1a, 0x3a, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x12, 0x29, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e,
	0x50, 0x61, 0x6e, 0x65, 0x6c, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xd9, 0x01, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x3d, 0x0a, 0x07, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x69,
	0x63, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x07, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63,
	0x12, 0x34, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x1a, 0x25, 0x0a, 0x0b, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x69,
	0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x22, 0x0a,
	0x08, 0x54, 0x65, 0x78, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x42, 0x08, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0xa2, 0x01, 0x0a, 0x10,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4d, 0x61, 0x70,
	0x12, 0x3c, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4d, 0x61, 0x70, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x50,
	0x0a, 0x0b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x5f, 0x0a, 0x05, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x61, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61,
	0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x22, 0x91, 0x01, 0x0a, 0x05, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x12, 0x26, 0x0a, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x68, 0x6f, 0x72,
	0x75, 0x73, 0x2e, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x2e, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0c, 0x0a,
	0x08, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x49,
	0x4e, 0x48, 0x45, 0x52, 0x49, 0x54, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x50, 0x4c,
	0x41, 0x43, 0x45, 0x10, 0x03, 0x32, 0xf8, 0x0c, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x5e, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x2d, 0x2e, 0x63, 0x68, 0x6f,
	0x72, 0x75, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x15, 0x2e, 0x63, 0x68, 0x6f, 0x72,
	0x75, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x00, 0x12, 0x3e, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x21,
	0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x1a, 0x0d, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x22, 0x00, 0x12, 0x62, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x12, 0x26, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x1a, 0x27, 0x2e, 0x63, 0x68,
	0x6f, 0x72, 0x75, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x2a, 0x2e, 0x63, 0x68,
	0x6f, 0x72, 0x75, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x1a, 0x2b, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x2a, 0x2e, 0x63, 0x68,
	0x6f, 0x72, 0x75, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x73, 0x1a, 0x2b, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x50, 0x61,
	0x6e, 0x65, 0x6c, 0x73, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x2a, 0x2e, 0x63, 0x68,
	0x6f, 0x72, 0x75, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x15, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x00,
	0x12, 0x3e, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x12, 0x21, 0x2e, 0x63,
	0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x1a,
	0x0d, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x22, 0x00,
	0x12, 0x62, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x12, 0x26, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x6e, 0x65, 0x6c, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x1a, 0x27, 0x2e, 0x63, 0x68, 0x6f, 0x72,
	0x75, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x12, 0x28, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x56, 0x6f, 0x63, 0x61,
	0x62, 0x1a, 0x0d, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x63, 0x61, 0x62,
	0x22, 0x00, 0x12, 0x46, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53, 0x69, 0x74, 0x65, 0x56, 0x6f, 0x63,
	0x61, 0x62, 0x12, 0x25, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x69, 0x74, 0x65, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x1a, 0x0d, 0x2e, 0x63, 0x68, 0x6f, 0x72,
	0x75, 0x73, 0x2e, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x12, 0x26, 0x2e, 0x63, 0x68,
	0x6f, 0x72, 0x75, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x56, 0x6f,
	0x63, 0x61, 0x62, 0x1a, 0x0d, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x63,
	0x61, 0x62, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x15, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x2e, 0x2e,
	0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x15, 0x2e,
	0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x13, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x12, 0x2c, 0x2e,
	0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x1a, 0x0d, 0x2e, 0x63, 0x68,
	0x6f, 0x72, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x10,
	0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x53, 0x69, 0x74, 0x65, 0x56, 0x6f, 0x63, 0x61, 0x62,
	0x12, 0x29, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x53, 0x69, 0x74, 0x65, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x1a, 0x0d, 0x2e, 0x63, 0x68,
	0x6f, 0x72, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x11,
	0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x56, 0x6f, 0x63, 0x61,
	0x62, 0x12, 0x2a, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x1a, 0x0d, 0x2e,
	0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x22, 0x00, 0x12, 0x5e,
	0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x2d, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x15, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x00, 0x12, 0x52,
	0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x56,
	0x6f, 0x63, 0x61, 0x62, 0x12, 0x2b, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x56, 0x6f, 0x63, 0x61,
	0x62, 0x1a, 0x0d, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x63, 0x61, 0x62,
	0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x74, 0x65,
	0x56, 0x6f, 0x63, 0x61, 0x62, 0x12, 0x28, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x74, 0x65, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x1a,
	0x0d, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x22, 0x00,
	0x12, 0x4e, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x56,
	0x6f, 0x63, 0x61, 0x62, 0x12, 0x29, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x1a,
	0x0d, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x22, 0x00,
	0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_metadata_proto_rawDescOnce sync.Once
	file_metadata_proto_rawDescData = file_metadata_proto_rawDesc
)

func file_metadata_proto_rawDescGZIP() []byte {
	file_metadata_proto_rawDescOnce.Do(func() {
		file_metadata_proto_rawDescData = protoimpl.X.CompressGZIP(file_metadata_proto_rawDescData)
	})
	return file_metadata_proto_rawDescData
}

var file_metadata_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_metadata_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_metadata_proto_goTypes = []interface{}{
	(Vocab_Mode)(0),                                // 0: chorus.Vocab.Mode
	(*Field)(nil),                                  // 1: chorus.Field
	(*FieldSearchSettings)(nil),                    // 2: chorus.FieldSearchSettings
	(*MetadataRequests)(nil),                       // 3: chorus.MetadataRequests
	(*MetadataResponses)(nil),                      // 4: chorus.MetadataResponses
	(*MetadataValue)(nil),                          // 5: chorus.MetadataValue
	(*MetadataValueMap)(nil),                       // 6: chorus.MetadataValueMap
	(*Panel)(nil),                                  // 7: chorus.Panel
	(*Vocab)(nil),                                  // 8: chorus.Vocab
	(*MetadataRequests_DeleteMetadataValues)(nil),  // 9: chorus.MetadataRequests.DeleteMetadataValues
	(*MetadataRequests_GetField)(nil),              // 10: chorus.MetadataRequests.GetField
	(*MetadataRequests_GetFieldMulti)(nil),         // 11: chorus.MetadataRequests.GetFieldMulti
	(*MetadataRequests_GetMetadataFields)(nil),     // 12: chorus.MetadataRequests.GetMetadataFields
	(*MetadataRequests_GetMetadataPanels)(nil),     // 13: chorus.MetadataRequests.GetMetadataPanels
	(*MetadataRequests_GetMetadataValues)(nil),     // 14: chorus.MetadataRequests.GetMetadataValues
	(*MetadataRequests_GetPanel)(nil),              // 15: chorus.MetadataRequests.GetPanel
	(*MetadataRequests_GetPanelMulti)(nil),         // 16: chorus.MetadataRequests.GetPanelMulti
	(*MetadataRequests_GetProfileVocab)(nil),       // 17: chorus.MetadataRequests.GetProfileVocab
	(*MetadataRequests_GetSiteVocab)(nil),          // 18: chorus.MetadataRequests.GetSiteVocab
	(*MetadataRequests_GetSpaceVocab)(nil),         // 19: chorus.MetadataRequests.GetSpaceVocab
	(*MetadataRequests_ReplaceMetadataValues)(nil), // 20: chorus.MetadataRequests.ReplaceMetadataValues
	(*MetadataRequests_ReplaceProfileVocab)(nil),   // 21: chorus.MetadataRequests.ReplaceProfileVocab
	(*MetadataRequests_ReplaceSiteVocab)(nil),      // 22: chorus.MetadataRequests.ReplaceSiteVocab
	(*MetadataRequests_ReplaceSpaceVocab)(nil),     // 23: chorus.MetadataRequests.ReplaceSpaceVocab
	(*MetadataRequests_UpdateMetadataValues)(nil),  // 24: chorus.MetadataRequests.UpdateMetadataValues
	(*MetadataRequests_UpdateProfileVocab)(nil),    // 25: chorus.MetadataRequests.UpdateProfileVocab
	(*MetadataRequests_UpdateSiteVocab)(nil),       // 26: chorus.MetadataRequests.UpdateSiteVocab
	(*MetadataRequests_UpdateSpaceVocab)(nil),      // 27: chorus.MetadataRequests.UpdateSpaceVocab
	(*MetadataResponses_GetFieldMulti)(nil),        // 28: chorus.MetadataResponses.GetFieldMulti
	(*MetadataResponses_GetMetadataFields)(nil),    // 29: chorus.MetadataResponses.GetMetadataFields
	(*MetadataResponses_GetMetadataPanels)(nil),    // 30: chorus.MetadataResponses.GetMetadataPanels
	(*MetadataResponses_GetPanelMulti)(nil),        // 31: chorus.MetadataResponses.GetPanelMulti
	(*MetadataValue_NumericType)(nil),              // 32: chorus.MetadataValue.NumericType
	(*MetadataValue_TextType)(nil),                 // 33: chorus.MetadataValue.TextType
	nil,                                            // 34: chorus.MetadataValueMap.ValuesEntry
}
var file_metadata_proto_depIdxs = []int32{
	2,  // 0: chorus.Field.searchSettings:type_name -> chorus.FieldSearchSettings
	32, // 1: chorus.MetadataValue.numeric:type_name -> chorus.MetadataValue.NumericType
	33, // 2: chorus.MetadataValue.text:type_name -> chorus.MetadataValue.TextType
	34, // 3: chorus.MetadataValueMap.values:type_name -> chorus.MetadataValueMap.ValuesEntry
	0,  // 4: chorus.Vocab.mode:type_name -> chorus.Vocab.Mode
	5,  // 5: chorus.MetadataRequests.DeleteMetadataValues.details:type_name -> chorus.MetadataValue
	5,  // 6: chorus.MetadataRequests.ReplaceMetadataValues.details:type_name -> chorus.MetadataValue
	8,  // 7: chorus.MetadataRequests.ReplaceProfileVocab.details:type_name -> chorus.Vocab
	8,  // 8: chorus.MetadataRequests.ReplaceSiteVocab.details:type_name -> chorus.Vocab
	8,  // 9: chorus.MetadataRequests.ReplaceSpaceVocab.details:type_name -> chorus.Vocab
	5,  // 10: chorus.MetadataRequests.UpdateMetadataValues.details:type_name -> chorus.MetadataValue
	8,  // 11: chorus.MetadataRequests.UpdateProfileVocab.details:type_name -> chorus.Vocab
	8,  // 12: chorus.MetadataRequests.UpdateSiteVocab.details:type_name -> chorus.Vocab
	8,  // 13: chorus.MetadataRequests.UpdateSpaceVocab.details:type_name -> chorus.Vocab
	1,  // 14: chorus.MetadataResponses.GetFieldMulti.response:type_name -> chorus.Field
	7,  // 15: chorus.MetadataResponses.GetPanelMulti.response:type_name -> chorus.Panel
	5,  // 16: chorus.MetadataValueMap.ValuesEntry.value:type_name -> chorus.MetadataValue
	9,  // 17: chorus.Metadata.DeleteMetadataValues:input_type -> chorus.MetadataRequests.DeleteMetadataValues
	10, // 18: chorus.Metadata.GetField:input_type -> chorus.MetadataRequests.GetField
	11, // 19: chorus.Metadata.GetFieldMulti:input_type -> chorus.MetadataRequests.GetFieldMulti
	12, // 20: chorus.Metadata.GetMetadataFields:input_type -> chorus.MetadataRequests.GetMetadataFields
	13, // 21: chorus.Metadata.GetMetadataPanels:input_type -> chorus.MetadataRequests.GetMetadataPanels
	14, // 22: chorus.Metadata.GetMetadataValues:input_type -> chorus.MetadataRequests.GetMetadataValues
	15, // 23: chorus.Metadata.GetPanel:input_type -> chorus.MetadataRequests.GetPanel
	16, // 24: chorus.Metadata.GetPanelMulti:input_type -> chorus.MetadataRequests.GetPanelMulti
	17, // 25: chorus.Metadata.GetProfileVocab:input_type -> chorus.MetadataRequests.GetProfileVocab
	18, // 26: chorus.Metadata.GetSiteVocab:input_type -> chorus.MetadataRequests.GetSiteVocab
	19, // 27: chorus.Metadata.GetSpaceVocab:input_type -> chorus.MetadataRequests.GetSpaceVocab
	20, // 28: chorus.Metadata.ReplaceMetadataValues:input_type -> chorus.MetadataRequests.ReplaceMetadataValues
	21, // 29: chorus.Metadata.ReplaceProfileVocab:input_type -> chorus.MetadataRequests.ReplaceProfileVocab
	22, // 30: chorus.Metadata.ReplaceSiteVocab:input_type -> chorus.MetadataRequests.ReplaceSiteVocab
	23, // 31: chorus.Metadata.ReplaceSpaceVocab:input_type -> chorus.MetadataRequests.ReplaceSpaceVocab
	24, // 32: chorus.Metadata.UpdateMetadataValues:input_type -> chorus.MetadataRequests.UpdateMetadataValues
	25, // 33: chorus.Metadata.UpdateProfileVocab:input_type -> chorus.MetadataRequests.UpdateProfileVocab
	26, // 34: chorus.Metadata.UpdateSiteVocab:input_type -> chorus.MetadataRequests.UpdateSiteVocab
	27, // 35: chorus.Metadata.UpdateSpaceVocab:input_type -> chorus.MetadataRequests.UpdateSpaceVocab
	5,  // 36: chorus.Metadata.DeleteMetadataValues:output_type -> chorus.MetadataValue
	1,  // 37: chorus.Metadata.GetField:output_type -> chorus.Field
	28, // 38: chorus.Metadata.GetFieldMulti:output_type -> chorus.MetadataResponses.GetFieldMulti
	29, // 39: chorus.Metadata.GetMetadataFields:output_type -> chorus.MetadataResponses.GetMetadataFields
	30, // 40: chorus.Metadata.GetMetadataPanels:output_type -> chorus.MetadataResponses.GetMetadataPanels
	5,  // 41: chorus.Metadata.GetMetadataValues:output_type -> chorus.MetadataValue
	7,  // 42: chorus.Metadata.GetPanel:output_type -> chorus.Panel
	31, // 43: chorus.Metadata.GetPanelMulti:output_type -> chorus.MetadataResponses.GetPanelMulti
	8,  // 44: chorus.Metadata.GetProfileVocab:output_type -> chorus.Vocab
	8,  // 45: chorus.Metadata.GetSiteVocab:output_type -> chorus.Vocab
	8,  // 46: chorus.Metadata.GetSpaceVocab:output_type -> chorus.Vocab
	5,  // 47: chorus.Metadata.ReplaceMetadataValues:output_type -> chorus.MetadataValue
	8,  // 48: chorus.Metadata.ReplaceProfileVocab:output_type -> chorus.Vocab
	8,  // 49: chorus.Metadata.ReplaceSiteVocab:output_type -> chorus.Vocab
	8,  // 50: chorus.Metadata.ReplaceSpaceVocab:output_type -> chorus.Vocab
	5,  // 51: chorus.Metadata.UpdateMetadataValues:output_type -> chorus.MetadataValue
	8,  // 52: chorus.Metadata.UpdateProfileVocab:output_type -> chorus.Vocab
	8,  // 53: chorus.Metadata.UpdateSiteVocab:output_type -> chorus.Vocab
	8,  // 54: chorus.Metadata.UpdateSpaceVocab:output_type -> chorus.Vocab
	36, // [36:55] is the sub-list for method output_type
	17, // [17:36] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_metadata_proto_init() }
func file_metadata_proto_init() {
	if File_metadata_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_metadata_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Field); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldSearchSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequests); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataResponses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataValueMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Panel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vocab); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequests_DeleteMetadataValues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequests_GetField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequests_GetFieldMulti); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequests_GetMetadataFields); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequests_GetMetadataPanels); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequests_GetMetadataValues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequests_GetPanel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequests_GetPanelMulti); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequests_GetProfileVocab); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequests_GetSiteVocab); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequests_GetSpaceVocab); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequests_ReplaceMetadataValues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequests_ReplaceProfileVocab); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequests_ReplaceSiteVocab); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequests_ReplaceSpaceVocab); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequests_UpdateMetadataValues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequests_UpdateProfileVocab); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequests_UpdateSiteVocab); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequests_UpdateSpaceVocab); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataResponses_GetFieldMulti); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataResponses_GetMetadataFields); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataResponses_GetMetadataPanels); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataResponses_GetPanelMulti); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataValue_NumericType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metadata_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataValue_TextType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_metadata_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*MetadataValue_Numeric)(nil),
		(*MetadataValue_Text)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_metadata_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_metadata_proto_goTypes,
		DependencyIndexes: file_metadata_proto_depIdxs,
		EnumInfos:         file_metadata_proto_enumTypes,
		MessageInfos:      file_metadata_proto_msgTypes,
	}.Build()
	File_metadata_proto = out.File
	file_metadata_proto_rawDesc = nil
	file_metadata_proto_goTypes = nil
	file_metadata_proto_depIdxs = nil
}
