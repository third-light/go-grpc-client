// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package protobuf

import (
	context "context"

	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// BinClient is the client API for Bin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BinClient interface {
	// Get details about the user's bin
	Empty(ctx context.Context, in *BinRequests_Empty, opts ...grpc.CallOption) (*BinResponses_Empty, error)
	// Get details about the user's bin
	Get(ctx context.Context, in *BinRequests_Get, opts ...grpc.CallOption) (*FolderDetails, error)
}

type binClient struct {
	cc grpc.ClientConnInterface
}

func NewBinClient(cc grpc.ClientConnInterface) BinClient {
	return &binClient{cc}
}

func (c *binClient) Empty(ctx context.Context, in *BinRequests_Empty, opts ...grpc.CallOption) (*BinResponses_Empty, error) {
	out := new(BinResponses_Empty)
	err := c.cc.Invoke(ctx, "/chorus.Bin/Empty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *binClient) Get(ctx context.Context, in *BinRequests_Get, opts ...grpc.CallOption) (*FolderDetails, error) {
	out := new(FolderDetails)
	err := c.cc.Invoke(ctx, "/chorus.Bin/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
