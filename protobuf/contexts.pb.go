// This is a protobuf specifications for the Contexts module of the Third Light gRPC API for Chorus.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.6.1
// source: contexts.proto

package protobuf

import (
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Type of the context.
type ContextType int32

const (
	// This represents a context of an unknown type.
	ContextType_Unknown ContextType = 0
	// This represents the current user's Private Space
	ContextType_PrivateSpace ContextType = 1
	// This represents a Space
	ContextType_Space ContextType = 2
	// This represents a different user
	ContextType_OtherUser ContextType = 3
	// This represents site content
	ContextType_Site ContextType = 4
)

// Enum value maps for ContextType.
var (
	ContextType_name = map[int32]string{
		0: "Unknown",
		1: "PrivateSpace",
		2: "Space",
		3: "OtherUser",
		4: "Site",
	}
	ContextType_value = map[string]int32{
		"Unknown":      0,
		"PrivateSpace": 1,
		"Space":        2,
		"OtherUser":    3,
		"Site":         4,
	}
)

func (x ContextType) Enum() *ContextType {
	p := new(ContextType)
	*p = x
	return p
}

func (x ContextType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContextType) Descriptor() protoreflect.EnumDescriptor {
	return file_contexts_proto_enumTypes[0].Descriptor()
}

func (ContextType) Type() protoreflect.EnumType {
	return &file_contexts_proto_enumTypes[0]
}

func (x ContextType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContextType.Descriptor instead.
func (ContextType) EnumDescriptor() ([]byte, []int) {
	return file_contexts_proto_rawDescGZIP(), []int{0}
}

// Details about a "context". A context is the root of a section of the site.
type ContextDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The URL for the avatar of the context.
	AvatarUrl string `protobuf:"bytes,5,opt,name=avatarUrl,proto3" json:"avatarUrl,omitempty"`
	// ID of the folder that is the home of this context. This will be null if the current user cannot view the folders.
	BackingFolderId *wrappers.StringValue `protobuf:"bytes,6,opt,name=backingFolderId,proto3" json:"backingFolderId,omitempty"`
	// The ID of the context.
	// A context id is generally used to refer to a catalogue (e.g. Metadata Catalogue). It can identify the current user, a space, another user in the system or the site as a whole.
	// * `me`—this represents the currently authenticated user's Private Space,
	// * `group{numeric-identifier}`—this represents a Space. The `{numeric-identifier}` is an internal identifier. If you require an id for a given Space, then use the `context` from the Space's details,
	// * `user{numeric-identifier}`—this represents another user in the system. The `{numeric-identifier}` is an internal identifier. If you require an id for a given user, then use the `context` from the User's details,
	// * `dom0`—this represents the whole site.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The name of the context.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// ID of the Space or User that this is the context of. This will be null either if you cannot see the Space or User, or this is
	// a context for the site.
	OwnerId *wrappers.StringValue `protobuf:"bytes,7,opt,name=ownerId,proto3" json:"ownerId,omitempty"`
	// The ID of the parent context.
	ParentId string `protobuf:"bytes,2,opt,name=parentId,proto3" json:"parentId,omitempty"`
	// The type of the context.
	Type ContextType `protobuf:"varint,3,opt,name=type,proto3,enum=chorus.ContextType" json:"type,omitempty"`
}

func (x *ContextDetails) Reset() {
	*x = ContextDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contexts_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContextDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContextDetails) ProtoMessage() {}

func (x *ContextDetails) ProtoReflect() protoreflect.Message {
	mi := &file_contexts_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContextDetails.ProtoReflect.Descriptor instead.
func (*ContextDetails) Descriptor() ([]byte, []int) {
	return file_contexts_proto_rawDescGZIP(), []int{0}
}

func (x *ContextDetails) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *ContextDetails) GetBackingFolderId() *wrappers.StringValue {
	if x != nil {
		return x.BackingFolderId
	}
	return nil
}

func (x *ContextDetails) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ContextDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContextDetails) GetOwnerId() *wrappers.StringValue {
	if x != nil {
		return x.OwnerId
	}
	return nil
}

func (x *ContextDetails) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *ContextDetails) GetType() ContextType {
	if x != nil {
		return x.Type
	}
	return ContextType_Unknown
}

type ContextsRequests struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ContextsRequests) Reset() {
	*x = ContextsRequests{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contexts_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContextsRequests) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContextsRequests) ProtoMessage() {}

func (x *ContextsRequests) ProtoReflect() protoreflect.Message {
	mi := &file_contexts_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContextsRequests.ProtoReflect.Descriptor instead.
func (*ContextsRequests) Descriptor() ([]byte, []int) {
	return file_contexts_proto_rawDescGZIP(), []int{1}
}

type ContextsResponses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ContextsResponses) Reset() {
	*x = ContextsResponses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contexts_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContextsResponses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContextsResponses) ProtoMessage() {}

func (x *ContextsResponses) ProtoReflect() protoreflect.Message {
	mi := &file_contexts_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContextsResponses.ProtoReflect.Descriptor instead.
func (*ContextsResponses) Descriptor() ([]byte, []int) {
	return file_contexts_proto_rawDescGZIP(), []int{2}
}

type ContextsRequests_Get struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// An array of contexts for which details should be returned.
	// A context id is generally used to refer to a catalogue (e.g. Metadata Catalogue). It can identify the current user, a space, another user in the system or the site as a whole.
	// * `me`—this represents the currently authenticated user's Private Space,
	// * `group{numeric-identifier}`—this represents a Space. The `{numeric-identifier}` is an internal identifier. If you require an id for a given Space, then use the `context` from the Space's details,
	// * `user{numeric-identifier}`—this represents another user in the system. The `{numeric-identifier}` is an internal identifier. If you require an id for a given user, then use the `context` from the User's details,
	// * `dom0`—this represents the whole site.
	ContextId string `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
}

func (x *ContextsRequests_Get) Reset() {
	*x = ContextsRequests_Get{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contexts_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContextsRequests_Get) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContextsRequests_Get) ProtoMessage() {}

func (x *ContextsRequests_Get) ProtoReflect() protoreflect.Message {
	mi := &file_contexts_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContextsRequests_Get.ProtoReflect.Descriptor instead.
func (*ContextsRequests_Get) Descriptor() ([]byte, []int) {
	return file_contexts_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ContextsRequests_Get) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

type ContextsRequests_GetChildren struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The parent context for which to get children
	// A context id is generally used to refer to a catalogue (e.g. Metadata Catalogue). It can identify the current user, a space, another user in the system or the site as a whole.
	// * `me`—this represents the currently authenticated user's Private Space,
	// * `group{numeric-identifier}`—this represents a Space. The `{numeric-identifier}` is an internal identifier. If you require an id for a given Space, then use the `context` from the Space's details,
	// * `user{numeric-identifier}`—this represents another user in the system. The `{numeric-identifier}` is an internal identifier. If you require an id for a given user, then use the `context` from the User's details,
	// * `dom0`—this represents the whole site.
	ContextId string `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
}

func (x *ContextsRequests_GetChildren) Reset() {
	*x = ContextsRequests_GetChildren{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contexts_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContextsRequests_GetChildren) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContextsRequests_GetChildren) ProtoMessage() {}

func (x *ContextsRequests_GetChildren) ProtoReflect() protoreflect.Message {
	mi := &file_contexts_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContextsRequests_GetChildren.ProtoReflect.Descriptor instead.
func (*ContextsRequests_GetChildren) Descriptor() ([]byte, []int) {
	return file_contexts_proto_rawDescGZIP(), []int{1, 1}
}

func (x *ContextsRequests_GetChildren) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

type ContextsRequests_GetMulti struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// An array of contexts for which details should be returned.
	// A context id is generally used to refer to a catalogue (e.g. Metadata Catalogue). It can identify the current user, a space, another user in the system or the site as a whole.
	// * `me`—this represents the currently authenticated user's Private Space,
	// * `group{numeric-identifier}`—this represents a Space. The `{numeric-identifier}` is an internal identifier. If you require an id for a given Space, then use the `context` from the Space's details,
	// * `user{numeric-identifier}`—this represents another user in the system. The `{numeric-identifier}` is an internal identifier. If you require an id for a given user, then use the `context` from the User's details,
	// * `dom0`—this represents the whole site.
	ContextIds []string `protobuf:"bytes,1,rep,name=contextIds,proto3" json:"contextIds,omitempty"`
}

func (x *ContextsRequests_GetMulti) Reset() {
	*x = ContextsRequests_GetMulti{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contexts_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContextsRequests_GetMulti) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContextsRequests_GetMulti) ProtoMessage() {}

func (x *ContextsRequests_GetMulti) ProtoReflect() protoreflect.Message {
	mi := &file_contexts_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContextsRequests_GetMulti.ProtoReflect.Descriptor instead.
func (*ContextsRequests_GetMulti) Descriptor() ([]byte, []int) {
	return file_contexts_proto_rawDescGZIP(), []int{1, 2}
}

func (x *ContextsRequests_GetMulti) GetContextIds() []string {
	if x != nil {
		return x.ContextIds
	}
	return nil
}

type ContextsRequests_GetSharedLinks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the context for which to get shared links
	// A context id is generally used to refer to a particular root of content. It can identify the current user, a Space or another user in the system.
	// * `me`—this represents the currently authenticated user's Private Space,
	// * `group{numeric-identifier}`—this represents a Space. The `{numeric-identifier}` is an internal identifier. If you require an id for a given Space, then use the `context` from the Space's details,
	// * `user{numeric-identifier}`—this represents another user in the system. The `{numeric-identifier}` is an internal identifier. If you require an id for a given user, then use the `context` from the User's details.
	ContextId string `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
}

func (x *ContextsRequests_GetSharedLinks) Reset() {
	*x = ContextsRequests_GetSharedLinks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contexts_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContextsRequests_GetSharedLinks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContextsRequests_GetSharedLinks) ProtoMessage() {}

func (x *ContextsRequests_GetSharedLinks) ProtoReflect() protoreflect.Message {
	mi := &file_contexts_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContextsRequests_GetSharedLinks.ProtoReflect.Descriptor instead.
func (*ContextsRequests_GetSharedLinks) Descriptor() ([]byte, []int) {
	return file_contexts_proto_rawDescGZIP(), []int{1, 3}
}

func (x *ContextsRequests_GetSharedLinks) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

type ContextsResponses_GetChildren struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []string `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *ContextsResponses_GetChildren) Reset() {
	*x = ContextsResponses_GetChildren{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contexts_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContextsResponses_GetChildren) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContextsResponses_GetChildren) ProtoMessage() {}

func (x *ContextsResponses_GetChildren) ProtoReflect() protoreflect.Message {
	mi := &file_contexts_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContextsResponses_GetChildren.ProtoReflect.Descriptor instead.
func (*ContextsResponses_GetChildren) Descriptor() ([]byte, []int) {
	return file_contexts_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ContextsResponses_GetChildren) GetResponse() []string {
	if x != nil {
		return x.Response
	}
	return nil
}

type ContextsResponses_GetMulti struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []*ContextDetails `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *ContextsResponses_GetMulti) Reset() {
	*x = ContextsResponses_GetMulti{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contexts_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContextsResponses_GetMulti) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContextsResponses_GetMulti) ProtoMessage() {}

func (x *ContextsResponses_GetMulti) ProtoReflect() protoreflect.Message {
	mi := &file_contexts_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContextsResponses_GetMulti.ProtoReflect.Descriptor instead.
func (*ContextsResponses_GetMulti) Descriptor() ([]byte, []int) {
	return file_contexts_proto_rawDescGZIP(), []int{2, 1}
}

func (x *ContextsResponses_GetMulti) GetResponse() []*ContextDetails {
	if x != nil {
		return x.Response
	}
	return nil
}

type ContextsResponses_GetSharedLinks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []*SharedLinkDetails `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *ContextsResponses_GetSharedLinks) Reset() {
	*x = ContextsResponses_GetSharedLinks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contexts_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContextsResponses_GetSharedLinks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContextsResponses_GetSharedLinks) ProtoMessage() {}

func (x *ContextsResponses_GetSharedLinks) ProtoReflect() protoreflect.Message {
	mi := &file_contexts_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContextsResponses_GetSharedLinks.ProtoReflect.Descriptor instead.
func (*ContextsResponses_GetSharedLinks) Descriptor() ([]byte, []int) {
	return file_contexts_proto_rawDescGZIP(), []int{2, 2}
}

func (x *ContextsResponses_GetSharedLinks) GetResponse() []*SharedLinkDetails {
	if x != nil {
		return x.Response
	}
	return nil
}

var File_contexts_proto protoreflect.FileDescriptor

var file_contexts_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x06, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65,
	0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x97, 0x02, 0x0a, 0x0e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x46, 0x0a, 0x0f,
	0x62, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x0f, 0x62, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x46, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x63, 0x68, 0x6f,
	0x72, 0x75, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xc0, 0x01, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x1a, 0x23, 0x0a, 0x03, 0x47, 0x65,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x1a,
	0x2b, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x1a, 0x2a, 0x0a, 0x08,
	0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x73, 0x1a, 0x2e, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x22, 0xc7, 0x01, 0x0a, 0x11, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x1a, 0x29,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x3e, 0x0a, 0x08, 0x47, 0x65, 0x74,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x12, 0x32, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x47, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x35, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4c, 0x69, 0x6e,
	0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2a, 0x50, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x10,
	0x0a, 0x0c, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x10, 0x01,
	0x12, 0x09, 0x0a, 0x05, 0x53, 0x70, 0x61, 0x63, 0x65, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x4f,
	0x74, 0x68, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x69,
	0x74, 0x65, 0x10, 0x04, 0x32, 0xe3, 0x02, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x73, 0x12, 0x3d, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x1c, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75,
	0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x1a, 0x16, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x00,
	0x12, 0x5c, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12,
	0x24, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x69,
	0x6c, 0x64, 0x72, 0x65, 0x6e, 0x1a, 0x25, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x00, 0x12, 0x53,
	0x0a, 0x08, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x12, 0x21, 0x2e, 0x63, 0x68, 0x6f,
	0x72, 0x75, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x1a, 0x22, 0x2e,
	0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x27, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x1a, 0x28,
	0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x3b,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_contexts_proto_rawDescOnce sync.Once
	file_contexts_proto_rawDescData = file_contexts_proto_rawDesc
)

func file_contexts_proto_rawDescGZIP() []byte {
	file_contexts_proto_rawDescOnce.Do(func() {
		file_contexts_proto_rawDescData = protoimpl.X.CompressGZIP(file_contexts_proto_rawDescData)
	})
	return file_contexts_proto_rawDescData
}

var file_contexts_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_contexts_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_contexts_proto_goTypes = []interface{}{
	(ContextType)(0),                         // 0: chorus.ContextType
	(*ContextDetails)(nil),                   // 1: chorus.ContextDetails
	(*ContextsRequests)(nil),                 // 2: chorus.ContextsRequests
	(*ContextsResponses)(nil),                // 3: chorus.ContextsResponses
	(*ContextsRequests_Get)(nil),             // 4: chorus.ContextsRequests.Get
	(*ContextsRequests_GetChildren)(nil),     // 5: chorus.ContextsRequests.GetChildren
	(*ContextsRequests_GetMulti)(nil),        // 6: chorus.ContextsRequests.GetMulti
	(*ContextsRequests_GetSharedLinks)(nil),  // 7: chorus.ContextsRequests.GetSharedLinks
	(*ContextsResponses_GetChildren)(nil),    // 8: chorus.ContextsResponses.GetChildren
	(*ContextsResponses_GetMulti)(nil),       // 9: chorus.ContextsResponses.GetMulti
	(*ContextsResponses_GetSharedLinks)(nil), // 10: chorus.ContextsResponses.GetSharedLinks
	(*wrappers.StringValue)(nil),             // 11: google.protobuf.StringValue
	(*SharedLinkDetails)(nil),                // 12: chorus.SharedLinkDetails
}
var file_contexts_proto_depIdxs = []int32{
	11, // 0: chorus.ContextDetails.backingFolderId:type_name -> google.protobuf.StringValue
	11, // 1: chorus.ContextDetails.ownerId:type_name -> google.protobuf.StringValue
	0,  // 2: chorus.ContextDetails.type:type_name -> chorus.ContextType
	1,  // 3: chorus.ContextsResponses.GetMulti.response:type_name -> chorus.ContextDetails
	12, // 4: chorus.ContextsResponses.GetSharedLinks.response:type_name -> chorus.SharedLinkDetails
	4,  // 5: chorus.Contexts.Get:input_type -> chorus.ContextsRequests.Get
	5,  // 6: chorus.Contexts.GetChildren:input_type -> chorus.ContextsRequests.GetChildren
	6,  // 7: chorus.Contexts.GetMulti:input_type -> chorus.ContextsRequests.GetMulti
	7,  // 8: chorus.Contexts.GetSharedLinks:input_type -> chorus.ContextsRequests.GetSharedLinks
	1,  // 9: chorus.Contexts.Get:output_type -> chorus.ContextDetails
	8,  // 10: chorus.Contexts.GetChildren:output_type -> chorus.ContextsResponses.GetChildren
	9,  // 11: chorus.Contexts.GetMulti:output_type -> chorus.ContextsResponses.GetMulti
	10, // 12: chorus.Contexts.GetSharedLinks:output_type -> chorus.ContextsResponses.GetSharedLinks
	9,  // [9:13] is the sub-list for method output_type
	5,  // [5:9] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_contexts_proto_init() }
func file_contexts_proto_init() {
	if File_contexts_proto != nil {
		return
	}
	file_sharedlinks_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_contexts_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContextDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contexts_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContextsRequests); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contexts_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContextsResponses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contexts_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContextsRequests_Get); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contexts_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContextsRequests_GetChildren); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contexts_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContextsRequests_GetMulti); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contexts_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContextsRequests_GetSharedLinks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contexts_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContextsResponses_GetChildren); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contexts_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContextsResponses_GetMulti); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contexts_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContextsResponses_GetSharedLinks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_contexts_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_contexts_proto_goTypes,
		DependencyIndexes: file_contexts_proto_depIdxs,
		EnumInfos:         file_contexts_proto_enumTypes,
		MessageInfos:      file_contexts_proto_msgTypes,
	}.Build()
	File_contexts_proto = out.File
	file_contexts_proto_rawDesc = nil
	file_contexts_proto_goTypes = nil
	file_contexts_proto_depIdxs = nil
}
