// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package protobuf

import (
	context "context"

	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ContextsClient is the client API for Contexts service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ContextsClient interface {
	// Get details about one or more contexts.
	Get(ctx context.Context, in *ContextsRequests_Get, opts ...grpc.CallOption) (*ContextDetails, error)
	// Get the logical areas visible to the current user
	// This will return site-wide "domain" contexts, the user's own home directory ("me"),
	// the home directories of any groups to which the user belongs, and the public folders
	// of any other users or groups in the site.
	// The context IDs returned are suitable for use with Folders.GetTopLevelFolders and suchlike
	GetChildren(ctx context.Context, in *ContextsRequests_GetChildren, opts ...grpc.CallOption) (*ContextsResponses_GetChildren, error)
	// Get details about one or more contexts.
	GetMulti(ctx context.Context, in *ContextsRequests_GetMulti, opts ...grpc.CallOption) (*ContextsResponses_GetMulti, error)
	// Get details about the shared links for a context. This is only available for Users and Spaces.
	GetSharedLinks(ctx context.Context, in *ContextsRequests_GetSharedLinks, opts ...grpc.CallOption) (*ContextsResponses_GetSharedLinks, error)
}

type contextsClient struct {
	cc grpc.ClientConnInterface
}

func NewContextsClient(cc grpc.ClientConnInterface) ContextsClient {
	return &contextsClient{cc}
}

func (c *contextsClient) Get(ctx context.Context, in *ContextsRequests_Get, opts ...grpc.CallOption) (*ContextDetails, error) {
	out := new(ContextDetails)
	err := c.cc.Invoke(ctx, "/chorus.Contexts/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contextsClient) GetChildren(ctx context.Context, in *ContextsRequests_GetChildren, opts ...grpc.CallOption) (*ContextsResponses_GetChildren, error) {
	out := new(ContextsResponses_GetChildren)
	err := c.cc.Invoke(ctx, "/chorus.Contexts/GetChildren", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contextsClient) GetMulti(ctx context.Context, in *ContextsRequests_GetMulti, opts ...grpc.CallOption) (*ContextsResponses_GetMulti, error) {
	out := new(ContextsResponses_GetMulti)
	err := c.cc.Invoke(ctx, "/chorus.Contexts/GetMulti", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contextsClient) GetSharedLinks(ctx context.Context, in *ContextsRequests_GetSharedLinks, opts ...grpc.CallOption) (*ContextsResponses_GetSharedLinks, error) {
	out := new(ContextsResponses_GetSharedLinks)
	err := c.cc.Invoke(ctx, "/chorus.Contexts/GetSharedLinks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
